{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/app.routing.ts","webpack:///src/app/auth/auth.interceptor.ts","webpack:///src/app/auth/error.interceptor.ts","webpack:///src/app/auth/login.service.ts","webpack:///src/app/blog/blog.component.ts","webpack:///src/app/blog/blog.component.html","webpack:///src/app/blog/blog.service.ts","webpack:///src/app/blog/singleBlog.component.ts","webpack:///src/app/blog/singleBlog.component.html","webpack:///src/app/footer/footer.component.ts","webpack:///src/app/footer/footer.component.html","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/login/register.component.ts","webpack:///src/app/login/register.component.html","webpack:///src/app/login/userEdit.component.ts","webpack:///src/app/login/userEdit.component.html","webpack:///src/app/login/userPage.component.ts","webpack:///src/app/login/userPage.component.html","webpack:///src/app/order/checkout.component.ts","webpack:///src/app/order/checkout.component.html","webpack:///src/app/order/confirmation.component.ts","webpack:///src/app/order/confirmation.component.html","webpack:///src/app/order/order.component.ts","webpack:///src/app/order/order.component.html","webpack:///src/app/order/order.service.ts","webpack:///src/app/product/product.component.ts","webpack:///src/app/product/product.component.html","webpack:///src/app/product/product.service.ts","webpack:///src/app/product/singleProduct.component.ts","webpack:///src/app/product/singleProduct.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","declarations","imports","providers","bootstrap","appRoutes","path","component","redirectTo","pathMatch","routing","forRoot","BasicAuthInterceptor","request","next","user","JSON","parse","localStorage","getItem","passwordHash","clone","setHeaders","Authorization","handle","ErrorInterceptor","loginService","pipe","err","status","console","log","removeCurrentUser","URL","URLuser","LoginService","http","isLogged","isAdmin","setCurrentUser","pass","auth","window","btoa","headers","get","setItem","stringify","response","address","delivery","body","shippingnameaux","shippingname","fix","orderList","length","put","error","handleError","post","roles","indexOf","withCredentials","removeItem","BlogComponent","router","activatedRoute","service","pservice","modalService","blog","products","snapshot","params","date","Date","year","getFullYear","month","getMonth","day","getDate","newProduct","name","franchise","distributor","price","description","height","width","weight","reference","stock","image","imagefull","newblog","author","text","textfull","idproduct","product","mySubscription","events","subscribe","event","navigated","getAllBlogs","blogs","getAllProducts","unsubscribe","deleteBlog","key","getBlogsByKey","saveBlog","_","navigate","content","open","centered","size","search","URL2","BlogService","result","page","providedIn","SingleBlogComponent","getBlogById","FooterComponent","HeaderComponent","order","logout","HomeComponent","productService","blogService","orderService","productList","total","getCurrentOrder","productAux","qt","productAmount","amount","pAmount","addProduct","LoginComponent","hide","required","login","u","alert","getCurrentUserId","hasError","logIn","RegisterComponent","users","lastname","company","number","email","street","floor","city","country","zipcode","invalid","value","newUser","UserEditComponent","getUserById","saveUser","saveInfo","UserPageComponent","oService","getAllMetrics","metrics","lastMetric","average","averageToPrint","toFixed","shift","getMetrics","CheckoutComponent","dirs","tax","totalaux","lastnameaux","companyaux","numberaux","emailaux","streetaux","flooraux","cityaux","countryaux","zipcodeaux","auxaddress","auxaddress2","push","finishOrder","ConfirmationComponent","orderAux","OrderComponent","userAux","deleteProductFromOrder","editOrder","URLmetrics","OrderService","httpOptions","orderid","orderId","pId","ProductComponent","franchises","distributors","min","max","autoTicks","showTicks","tickInterval","closeResult","productsAux","lastpage","filterqty","sorting","sortingMethod","searching","searchkey","routeReuseStrategy","shouldReuseRoute","getFranchisesAndDistributors","getProductsbyPage","getProductsbyRecommendations","recommendedProducts","Math","round","toDo","sort","getProductsbySort","getProductsbyKey","deleteProduct","saveProduct","getProductsbyFilter","franchisesaux","distributorsaux","i","includes","concat","filter","sortBy","ALL","ProductService","min_price","max_price","SingleProductComponent","getProductById","qty","environment","production","baseUrl","bootstrapModule","ref"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'frontend';\r\n}\r\n","<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\r\n<!-- * * * * * * * * * * * The content below * * * * * * * * * * * -->\r\n<!-- * * * * * * * * * * is only a placeholder * * * * * * * * * * -->\r\n<!-- * * * * * * * * * * and can be replaced. * * * * * * * * * * * -->\r\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\r\n<!-- * * * * * * * * * Delete the template below * * * * * * * * * * -->\r\n<!-- * * * * * * * to get started with your project! * * * * * * * * -->\r\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\r\n<header>\r\n  <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css\" integrity=\"sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh\" crossorigin=\"anonymous\">\r\n</header>\r\n<app-header class=\"sticky-top d-block\"></app-header>\r\n<router-outlet></router-outlet>\r\n<app-footer></app-footer>\r\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\r\n<!-- * * * * * * * * * * * The content above * * * * * * * * * * * -->\r\n<!-- * * * * * * * * * * is only a placeholder * * * * * * * * * * -->\r\n<!-- * * * * * * * * * * and can be replaced. * * * * * * * * * * * -->\r\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\r\n<!-- * * * * * * * * * * End of Placeholder * * * * * * * * * * * -->\r\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\r\n\r\n\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatBadgeModule} from '@angular/material/badge';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatSliderModule} from '@angular/material/slider';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatRippleModule} from '@angular/material/core';\r\nimport {MatSelectModule} from '@angular/material/select';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { BlogComponent } from './blog/blog.component';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { FooterComponent } from './footer/footer.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ProductComponent } from './product/product.component';\r\nimport { OrderComponent } from './order/order.component';\r\nimport { routing } from './app.routing';\r\nimport { SingleProductComponent } from './product/singleProduct.component';\r\nimport { ProductService } from './product/product.service';\r\nimport { LoginService } from './auth/login.service';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './login/register.component';\r\nimport { BasicAuthInterceptor } from './auth/auth.interceptor';\r\nimport { ErrorInterceptor } from './auth/error.interceptor';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { UserPageComponent } from './login/userPage.component';\r\nimport { UserEditComponent } from './login/userEdit.component';\r\nimport { OrderService } from './order/order.service';\r\nimport { CheckoutComponent } from './order/checkout.component';\r\nimport { ConfirmationComponent } from './order/confirmation.component';\r\nimport { SingleBlogComponent } from './blog/singleBlog.component'\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { HomeComponent } from './home/home.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    BlogComponent,\r\n    HeaderComponent,\r\n    FooterComponent,\r\n    ProductComponent,\r\n    SingleProductComponent,\r\n    SingleBlogComponent,\r\n    OrderComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    UserPageComponent,\r\n    CheckoutComponent,\r\n    ConfirmationComponent,\r\n    HomeComponent,\r\n    UserEditComponent,\r\n  ],\r\n  imports: [\r\n    NgbModule,\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    MatMenuModule,\r\n    MatToolbarModule,\r\n    MatBadgeModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatRadioModule,\r\n    MatSliderModule,\r\n    routing,\r\n    MatTabsModule,\r\n    MatInputModule,\r\n    MatFormFieldModule,\r\n    MatDialogModule,\r\n    MatCardModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    ReactiveFormsModule,\r\n    routing\r\n  ],\r\n  providers: [ProductService, LoginService,OrderService,\r\n    { provide: HTTP_INTERCEPTORS, useClass: BasicAuthInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true }\r\n  ],\r\n  bootstrap: [AppComponent, ProductComponent],\r\n  exports: [ProductComponent]\r\n})\r\nexport class AppModule { }\r\n","import {Routes, RouterModule} from '@angular/router';\r\nimport { BlogComponent } from './blog/blog.component';\r\nimport { OrderComponent } from './order/order.component';\r\nimport { ProductComponent } from './product/product.component';\r\nimport { AppComponent } from './app.component';\r\nimport { SingleProductComponent } from './product/singleProduct.component';\r\nimport { RegisterComponent } from './login/register.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { UserPageComponent } from './login/userPage.component';\r\nimport { UserEditComponent } from './login/userEdit.component';\r\nimport { CheckoutComponent } from './order/checkout.component';\r\nimport { ConfirmationComponent } from './order/confirmation.component';\r\nimport { SingleBlogComponent } from './blog/singleBlog.component';\r\nimport { HomeComponent } from './home/home.component';\r\n\r\nconst appRoutes: Routes = [\r\n    // Rutas usadas para categorias\r\n  {path: '', component: HomeComponent},\r\n  {path: 'blog', component: BlogComponent},\r\n  {path: 'order', component: OrderComponent},\r\n  {path: 'product', component: ProductComponent},\r\n  {path: 'singleBlog/:id', component: SingleBlogComponent},\r\n  {path: 'singleProduct/:id', component: SingleProductComponent},\r\n  {path: 'register', component: RegisterComponent},\r\n  {path: 'login', component: LoginComponent},\r\n  {path: 'userPage/:id', component: UserPageComponent},\r\n  {path: 'userEdit/:id', component: UserEditComponent},\r\n  {path: 'checkout', component: CheckoutComponent},\r\n  {path: 'confirmation', component: ConfirmationComponent},\r\n\r\n  // ruta usada por defecto a la hora de abrir la pagina\r\n  {path: '', redirectTo: '/', pathMatch: 'full'}\r\n];\r\n\r\nexport const routing = RouterModule.forRoot(appRoutes);\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n// Strategy based on http://jasonwatmore.com/post/2018/09/07/angular-6-basic-http-authentication-tutorial-example\r\n@Injectable()\r\nexport class BasicAuthInterceptor implements HttpInterceptor {\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n        // add authorization header with basic auth credentials if available\r\n        let user = JSON.parse(localStorage.getItem('currentUser'));\r\n\r\n        if (user && user.passwordHash) {\r\n            request = request.clone({\r\n                setHeaders: {\r\n                    Authorization: `Basic ${user.passwordHash}`\r\n                }\r\n            });\r\n        }\r\n\r\n        return next.handle(request);\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { LoginService } from './login.service';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n\r\n    constructor(private loginService: LoginService) {}\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return next.handle(request).pipe(catchError(err => {\r\n\r\n            if (err.status === 401) {\r\n                // auto logout if 401 response returned from api\r\n                console.log('ACCESO DENEGADO');\r\n                this.loginService.removeCurrentUser();\r\n                // location.reload(true);\r\n            }\r\n\r\n\r\n            return throwError(err);\r\n        }));\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { map, catchError } from 'rxjs/operators';\r\nimport { Order } from '../order/order.model';\r\nimport { Address } from './address.model';\r\nimport { Observable } from 'rxjs';\r\nimport { ITS_JUST_ANGULAR } from '@angular/core/src/r3_symbols';\r\n\r\nconst URL = '/api';\r\nconst URLuser = '/api/user/';\r\n\r\nexport interface User {\r\n  id?: number;\r\n  name: string;\r\n  delivery: Address;\r\n  orderList: Order[];\r\n  roles: string[];\r\n  passwordHash: string;\r\n}\r\n\r\n@Injectable()\r\nexport class LoginService {\r\n\r\n  isLogged = false;\r\n  isAdmin = false;\r\n  user: User;\r\n  auth: string;\r\n  fix: string;\r\n\r\n  constructor(private http: HttpClient) {\r\n    let user = JSON.parse(localStorage.getItem('currentUser'));\r\n    if (user) {\r\n      console.log('Logged user');\r\n      this.setCurrentUser(user);\r\n    }\r\n  }\r\n\r\n  login(user: string, pass: string) {\r\n\r\n    let auth = window.btoa(user + ':' + pass);\r\n\r\n    const headers = new HttpHeaders({\r\n      Authorization: 'Basic ' + auth,\r\n      'X-Requested-With': 'XMLHttpRequest',\r\n    });\r\n\r\n    return this.http.get<User>('/api/logIn', { headers })\r\n        // tslint:disable-next-line: no-shadowed-variable\r\n        .pipe(map(user => {\r\n\r\n          if (user) {\r\n            this.setCurrentUser(user);\r\n            user.passwordHash = auth;\r\n            localStorage.setItem('currentUser', JSON.stringify(user));\r\n          }\r\n\r\n          return user;\r\n        }));\r\n  }\r\n\r\n  logout() {\r\n\r\n    return this.http.get(URL + '/logOut').pipe(\r\n        map(response => {\r\n          this.removeCurrentUser();\r\n          return response;\r\n        }),\r\n    );\r\n  }\r\n\r\n  saveUser(user: User): Observable<User>{\r\n    this.setCurrentUser(user);\r\n    const address = user.delivery;\r\n    const body = JSON.stringify(address);\r\n    const id = user.id;\r\n    const shippingnameaux = user.delivery.shippingname;\r\n    //const newpass = user.passwordHash;\r\n    const headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n    });\r\n    this.fix = \"false\";\r\n    if(user.orderList.length>1)\r\n    if(user.orderList[0].id > user.orderList[1].id && user.orderList.length == 2){\r\n       this.fix = \"true\"\r\n    }\r\n    else  \r\n    console.log(user);\r\n    return this.http\r\n        .put<User>(URLuser + id + \"?shippingName=\" + shippingnameaux + \"&fix=\" + this.fix /*+ \"&passwordHash=\" + newpass*/, body, {headers})\r\n        .pipe(catchError((error) => this.handleError(error)));\r\n  }\r\n\r\n  newUser(user: User): Observable<User>{\r\n    const body = JSON.stringify(user);\r\n    const headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n    });\r\n    return this.http\r\n        .post<User>(URLuser, body, {headers})\r\n        .pipe(catchError((error) => this.handleError(error)));\r\n  }\r\n\r\n  private setCurrentUser(user: User) {\r\n    this.isLogged = true;\r\n    this.user = user;\r\n    this.isAdmin = this.user.roles.indexOf('ROLE_ADMIN') !== -1;\r\n  }\r\n\r\n  getCurrentUser(id: number| string): Observable<User> {\r\n    return this.http.get<User>(URL + '/user/' + id);\r\n  }\r\n\r\n  getCurrentUserId(): number {\r\n    return this.user.id;\r\n  }\r\n\r\n  getUserById(id: number| string): Observable<User> {\r\n    return this.http.get<User>(URLuser + id, {withCredentials: true})\r\n    .pipe(catchError((error) => this.handleError(error)));\r\n  }\r\n\r\n  removeCurrentUser() {\r\n    localStorage.removeItem('currentUser');\r\n    this.isLogged = false;\r\n    this.isAdmin = false;\r\n  }\r\n\r\n  private handleError(error: any) {\r\n    console.error(error);\r\n    // tslint:disable-next-line: deprecation\r\n    return Observable.throw('Server error (' + error.status + ' ): ' + error);\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute, NavigationEnd } from '@angular/router';\r\nimport { Blog } from './blog.model';\r\nimport { BlogService } from './blog.service';\r\nimport { LoginService } from '../auth/login.service';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Product } from '../product/product.model';\r\nimport { ProductService } from '../product/product.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-blog',\r\n  templateUrl: './blog.component.html',\r\n  styleUrls: ['./blog.component.css']\r\n})\r\nexport class BlogComponent implements OnInit {\r\n\r\n  blog: Blog[] = [];\r\n  newblog: Blog;\r\n  date: Date;\r\n  products: Product[] = [];\r\n  newProduct: Product;\r\n  mySubscription: any;\r\n\r\n  constructor(private router: Router, activatedRoute: ActivatedRoute, private service: BlogService, private pservice: ProductService, public loginService: LoginService, private modalService: NgbModal) {\r\n    const id = activatedRoute.snapshot.params.id;\r\n    this.date = new Date();\r\n    let year = this.date.getFullYear();\r\n    let month = this.date.getMonth() + 1;\r\n    let day = this.date.getDate();\r\n    this.newProduct = { name:'', franchise:'', distributor:'', price:0, description:'', \r\n                        height:0, width:0, weight:0, reference:'', stock:0, image: '../assets/img/product/notavailable.png', imagefull: '../assets/img/product/notavailable2.png' }\r\n    this.newblog = {\r\n      author: \"\", name: \"\", text: \"\", image: \"../assets/img/blog/newblog.png\",\r\n      textfull: \"\", day: day, month: month, year: year, idproduct: 0, product: this.newProduct\r\n    };\r\n    console.log(this.newblog);\r\n    this.mySubscription = this.router.events.subscribe((event) => {\r\n      if (event instanceof NavigationEnd) {\r\n        // Trick the Router into believing it's last link wasn't previously loaded\r\n        this.router.navigated = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.service.getAllBlogs().subscribe(\r\n      (blogs => this.blog = blogs),\r\n      (error) => console.error(error));\r\n\r\n      this.pservice.getAllProducts().subscribe(\r\n        products => this.products = products,\r\n        error => console.log(error)\r\n      );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.mySubscription) {\r\n      this.mySubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  delete(blog: Blog) {\r\n    this.service.deleteBlog(blog).subscribe(\r\n      blog => this.blog = blog,\r\n      error => console.log(error)\r\n    );\r\n  }\r\n\r\n  search(key: string) {\r\n    this.service.getBlogsByKey(key).subscribe(\r\n      blog => this.blog = blog,\r\n      error => console.log(error)\r\n    );\r\n  }\r\n\r\n  saveBlog() {\r\n    this.service.saveBlog(this.newblog).subscribe(\r\n    _ => {this.router.navigate(['/blog']);}, (error: Error) => console.error('error creating new blog entrie: ' + error));\r\n  }\r\n\r\n  openVerticallyCentered(content) {\r\n    this.modalService.open(content, { centered: true, size: 'lg' });\r\n  }\r\n\r\n}\r\n\r\n","<meta charset=\"UTF-8\">\r\n<!-- ================ start banner area ================= -->\r\n<mat-card class=\"blog-banner-area\" id=\"blog\">\r\n    <img src=\"assets/banner/tokyo ghoul.png\" style=\"float:left;width:100%;height:100%;object-fit:cover;opacity: 0.3;\">\r\n    <div class=\"container h-100\">\r\n        <div class=\"blog-banner\">\r\n            <div class=\"text-center\">\r\n                <h1>Nuestro Blog</h1>\r\n                <nav aria-label=\"breadcrumb\" class=\"banner-breadcrumb\">\r\n                    <ol class=\"breadcrumb\">\r\n                        <li class=\"breadcrumb-item\"><a [routerLink]=\"['/']\">Home</a></li>\r\n                        <li class=\"breadcrumb-item active\" aria-current=\"page\">Blog</li>\r\n                    </ol>\r\n                </nav>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</mat-card>\r\n<!-- ================ end banner area ================= -->\r\n<!--================Blog Area =================-->\r\n<mat-card class=\"blog_area\">\r\n    <div class=\"container\" style=\"padding-top: 30px;\">\r\n        <div *ngIf=\"loginService.isAdmin\">\r\n            <button mat-button class=\"add-product\" (click)=\"openVerticallyCentered(content)\">Añadir blog</button>\r\n            <ng-template #content let-modal>\r\n                <div class=\"modal-header\">\r\n                    <h4 class=\"modal-title\">Nuevo blog</h4>\r\n                    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\">\r\n                        <span aria-hidden=\"true\">&times;</span>\r\n                    </button>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n                    <div class=\"form-row mb-4\">\r\n                        <label class=\"col-form-label\">Nombre:</label>\r\n                        <input matInput type=\"text\" class=\"form-control\" name=\"name\" required\r\n                            [(ngModel)]=\"newblog.name\">\r\n                        <label class=\"col-form-label\">Autor:</label>\r\n                        <input matInput type=\"text\" class=\"form-control\" name=\"author\" required\r\n                            [(ngModel)]=\"newblog.author\">\r\n                        <div class=\"col\">\r\n                            <label class=\"col-form-label\">Texto:</label>\r\n                            <textarea matInput class=\"form-control\" name=\"text\" required\r\n                                [(ngModel)]=\"newblog.text\"></textarea>\r\n                        </div>\r\n                        <div class=\"col\">\r\n                            <label class=\"col-form-label\">Texto completo:</label>\r\n                            <textarea matInput class=\"form-control\" name=\"textfull\" required\r\n                                [(ngModel)]=\"newblog.textfull\"></textarea>\r\n                        </div>\r\n                    </div>\r\n                    <div ngbDropdown class=\"d-inline-block\">\r\n                        <button class=\"btn btn-outline-primary\" id=\"dropdownBasic1\"\r\n                            ngbDropdownToggle>Productos:</button>\r\n                        <div ngbDropdownMenu aria-labelledby=\"dropdownBasic1\">\r\n                            <div *ngFor=\"let product of products\">\r\n                                <button ngbDropdownItem>ID: [{{product.id}}] - {{product.name}}</button>\r\n                            </div>\r\n                        </div>\r\n                    </div><br>\r\n                    <label class=\"col-form-label\">ID de producto relacionado:</label>\r\n                    <input class=\"form-control\" name=\"idproduct\" required [(ngModel)]=\"newblog.product.id\">\r\n                </div>\r\n                <div class=\"modal-footer\">\r\n                    <button type=\"submit\" class=\"submit-blog\" form=\"newBlog\" (click)=\"saveBlog()\"\r\n                        (click)=\"modal.close('Close click')\">Enviar</button>\r\n                    <button type=\"button\" class=\"btn btn-light\" (click)=\"modal.close('Close click')\">Cerrar</button>\r\n                </div>\r\n            </ng-template>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-lg-8\">\r\n                <div class=\"blog_left_sidebar\">\r\n                    <!--{{#blogspage}}-->\r\n                    <div *ngFor=\"let blogitem of blog\">\r\n                        <article class=\"row blog_item\">\r\n                            <div class=\"col-md-3\">\r\n                                <div class=\"blog_info text-right\">\r\n                                    <div class=\"post_tag\">\r\n                                        <a>Noticias, </a><br>\r\n                                        <!-- <a class=\"active\" href=\"/products\">\r\n                                            {{blog[0].franchise}}</a> -->\r\n                                        <a class=\"active\">{{blogitem.product.franchise}}, </a><br>\r\n                                        <a>Nueva figura</a>\r\n                                    </div>\r\n                                    <ul class=\"blog_meta list\">\r\n                                        <li>\r\n                                            <mat-icon>face</mat-icon>\r\n                                            <a>{{blogitem.author}}</a>\r\n                                        </li>\r\n                                        <li>\r\n                                            <mat-icon>calendar_today</mat-icon>\r\n                                            <a>{{blogitem.day}}/{{blogitem.month}}/{{blogitem.year}}</a>\r\n                                        </li>\r\n                                        <li>\r\n                                            <div *ngIf=\"loginService.isAdmin\">\r\n                                                <button mat-button class=\"remove-single-blog single-blog-button\"\r\n                                                    (click)=\"delete(blogitem)\">Eliminar</button>\r\n                                            </div>\r\n                                        </li>\r\n                                        \r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-9\">\r\n                                <div class=\"blog_post\">\r\n                                    <img *ngIf=\"blogitem.image\" src=\"assets{{blogitem.image}}\" width=\"550\" height=\"270\">\r\n                                    <div class=\"blog_details\">\r\n                                        <h2>\r\n                                            <a class=\"blog-tittle\"\r\n                                                [routerLink]=\"['/singleBlog', blogitem.id]\">{{blogitem.name}}</a>\r\n                                            <!--<a mat-flat-button class=\"blog-tittle\"[routerLink]=\"['/singleBlog', blogitem.id]\">{{blogitem.name}}</a>-->\r\n                                        </h2>\r\n                                        <p>{{blogitem.text}}</p>\r\n                                        <a mat-flat-button class=\"button button-blog blog\"\r\n                                            [routerLink]=\"['/singleBlog', blogitem.id]\">Ver\r\n                                            más</a>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </article>\r\n                    </div>\r\n                    <!--{{/blogspage}}-->\r\n                </div>\r\n            </div>\r\n            <div class=\"col-lg-4\">\r\n                <div class=\"blog_right_sidebar\">\r\n                    <aside class=\"single_sidebar_widget search_widget\" style=\"padding-bottom: 20px;\">\r\n                        <div class=\"input-group\">\r\n                            <input #key #keyControl=\"ngModel\" class=\"form-control\" type=\"text\" [(ngModel)]=\"key.value\"\r\n                                placeholder=\"Buscar\" (keydown.enter)=\"search(key.value)\">\r\n                            <span class=\"input-group-btn\">\r\n                                <button class=\"btn btn-default\" type=\"button\">\r\n                                    <i class=\"lnr lnr-magnifier\"></i>\r\n                                </button>\r\n                            </span>\r\n                        </div>\r\n                        <!-- /input-group -->\r\n                        <div class=\"br\"></div>\r\n                    </aside>\r\n                    <aside class=\"single_sidebar_widget popular_post_widget\">\r\n                        <h3 class=\"widget_title\">Posts populares</h3>\r\n                        <!--{{#blogspage}}-->\r\n                        <div *ngFor=\"let blogitem of blog\">\r\n                            <div class=\"media post_item card-blog\">\r\n                                <img *ngIf=\"blogitem.image\" src=\"assets{{blogitem.image}}\" width=\"100\" height=\"50\"\r\n                                    alt=\"post\">\r\n                                <div class=\"media-body\">\r\n                                    <h3 class=\"card-blog__title\"><a\r\n                                            [routerLink]=\"['/singleBlog', blogitem.id]\">{{blogitem.name}}</a></h3>\r\n                                    <p></p>\r\n                                    <br>\r\n                                    <!--{{day}}/{{month}}/{{year}}-->\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <!--{{/blogspage}}-->\r\n                        <div class=\"br\"></div>\r\n                    </aside>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <nav aria-label=\"breadcrumb\" class=\"banner-breadcrumb\">\r\n            <ol class=\"breadcrumb\">\r\n            </ol>\r\n        </nav>\r\n    </div>\r\n\r\n</mat-card>\r\n<!--================Blog Area =================-->","import { Injectable } from '@angular/core';\r\nimport {Blog} from './blog.model';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\n\r\n\r\nconst URL = 'api/blogs/';\r\nconst URL2 = 'api/blogs';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BlogService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getBlogs(): Observable<Blog[]> {\r\n    return this.http.get<any>(URL, {withCredentials: true})\r\n      .pipe(\r\n        map(result => result.content),\r\n        catchError((error) => this.handleError(error)));\r\n  }\r\n\r\n  getBlogsByKey(key:string): Observable<Blog[]> {\r\n    return this.http.get<any>(URL2 + '?key=' + key, {withCredentials: true})\r\n      .pipe(\r\n        catchError((error) => this.handleError(error)));\r\n  }\r\n\r\n  getAllBlogs(): Observable<Blog[]>{\r\n    console.log(\"pidiendo todos los datos\");\r\n    return this.http.get<Blog[]>(URL,{withCredentials:true})\r\n        .pipe(catchError((error)=>this.handleError(error)));\r\n  }\r\n\r\n  getBlogById(id: number| string): Observable<Blog> {\r\n    return this.http.get<Blog>(URL + id, {withCredentials: true})\r\n    .pipe(catchError((error) => this.handleError(error)));\r\n  }\r\n\r\n  getBlogsbyPage(page: number): Observable<Blog[]> {\r\n    return this.http.get<any>(URL + '?page=' + page, {withCredentials: true})\r\n        .pipe(\r\n            map(result => result.content),\r\n            catchError((error) => this.handleError(error)));\r\n  }\r\n\r\n  saveBlog(blog: Blog): Observable<Blog> {\r\n    const body = JSON.stringify(blog);\r\n    const headers = new HttpHeaders({'Content-Type': 'application/json'});\r\n    console.log(blog);\r\n\r\n    if (!blog.id) {\r\n        return this.http.post<Blog>(URL, body, {headers}).pipe(catchError((error) => this.handleError(error)));\r\n    } else {\r\n        return this.http.put<Blog>(URL + blog.id, body, {headers}).pipe(catchError((error) => this.handleError(error)));\r\n    }  \r\n  }\r\n\r\n  deleteBlog(blog: Blog): Observable<Blog[]> {\r\n    return this.http.delete<Blog[]>(URL + blog.id).pipe(catchError((error) => this.handleError(error)));\r\n  }\r\n\r\n  private handleError(error: any) {\r\n    console.error(error);\r\n    // tslint:disable-next-line: deprecation\r\n    return Observable.throw('Server error (' + error.status + ' ): ' + error);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { BlogService } from './blog.service';\r\nimport { Blog } from './blog.model';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LoginService } from '../auth/login.service';\r\nimport { ProductService } from '../product/product.service';\r\nimport { Observable, interval, Subscription } from 'rxjs';\r\n\r\n@Component ( {\r\n    selector: 'app-blog',\r\n    templateUrl: './singleBlog.component.html',\r\n    styleUrls: ['./blog.component.css']\r\n} )\r\n\r\nexport class SingleBlogComponent implements OnInit{\r\n\r\n    blog: Blog;\r\n    blogs: Blog[] = []; //blogs barra derecha\r\n    updateSubscription: Subscription;\r\n\r\n    constructor(private router: Router, activatedRoute: ActivatedRoute, public service: BlogService, public loginService: LoginService) {\r\n        const id = activatedRoute.snapshot.params.id;\r\n        service.getBlogById(id).subscribe((blog => this.blog = blog),(error) => console.error(error));\r\n\r\n    }\r\n    ngOnInit(): void {\r\n        this.service.getAllBlogs().subscribe(\r\n            (blogs => this.blogs = blogs),\r\n            (error) => console.error(error));\r\n    }\r\n\r\n    deleteBlog() {\r\n        this.service.deleteBlog(this.blog).subscribe((_) => this.router.navigate(['/blog']), (error) => console.error(error));\r\n    }\r\n\r\n    search(key: string) {\r\n        this.service.getBlogsByKey(key).subscribe(\r\n          blog => {this.blogs = blog;\r\n                   this.blog = this.blogs[0];\r\n                   this.router.navigate(['/singleBlog/' + this.blogs[0].id])},\r\n          error => console.log(error)\r\n        );\r\n      }\r\n\r\n /*public navToBlog(blogId: number) {\r\n        this.router.navigate(['/singleBlog', blogId]);\r\n        \r\n      } */\r\n\r\n\r\n}","<meta charset=\"UTF-8\">\r\n<!--================Blog Area =================-->\r\n<section class=\"blog_area single-post-area py-80px section-margin--small\">\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <div class=\"col-lg-8 posts-list\">\r\n                <div class=\"single-post row\">\r\n                    <div class=\"col-lg-12\">\r\n                        <div class=\"feature-img\">\r\n                            <img class=\"img-fluid\" src=\"assets{{blog.image}}\" alt=\"\">\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-lg-3  col-md-3\">\r\n                        <div class=\"blog_info text-right\">\r\n                            <div class=\"post_tag\">\r\n                                <a>Noticias,</a><br>\r\n                                <!--<input type=\"submit\" class=\"active\" form=\"franchiseForm\"\r\n                                        id=\"submit-blog\" value=\"{{blog.product.franchise}}\"> -->\r\n                                <a>{{blog.product.franchise}}, </a><br>\r\n                                <a>Nueva figura</a>\r\n                            </div>\r\n                            <!--<form id=\"franchiseForm\" action=\"/products/{{blog.product.franchise}}\" method=\"POST\">\r\n                                    <input type=\"hidden\" name=\"franchise\" value=\"{{product.franchise}}\"> <input\r\n                                        type=\"hidden\" name=\"_csrf\" value=\"{{token}}\" />\r\n                                </form> -->\r\n                            <ul>\r\n                                <li>\r\n                                    <mat-icon>face</mat-icon>\r\n                                    <a>{{blog.author}}</a>\r\n                                </li>\r\n\r\n                                <li>\r\n                                    <mat-icon>calendar_today</mat-icon>\r\n                                    <a>{{blog.day}}/{{blog.month}}/{{blog.year}}</a>\r\n                                </li>\r\n                                <li>\r\n                                    <div *ngIf=\"loginService.isAdmin\">\r\n                                        <button mat-button class=\"remove-single-blog single-blog-button\"\r\n                                            (click)=\"deleteBlog()\">Eliminar</button>\r\n                                    </div>\r\n\r\n                                </li>\r\n                                    <!--<div *ngIf=\"loginService.isAdmin\">\r\n                                            <button class=\"remove-blog-entrie\" (click)=\"deleteBlog()\">Eliminar</button>\r\n                                        </div>-->\r\n\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-lg-9 col-md-9 blog_details\">\r\n                        <h2>{{blog.name}}</h2>\r\n                        <p class=\"excert\">{{blog.product.description}}</p>\r\n                        <p>\r\n                            {{blog.textfull}}\r\n                        </p>\r\n                        <p>\r\n                            <a class=\"active\" [routerLink]=\"['/singleProduct', blog.product.id]\">Link de compra</a>\r\n                        </p>\r\n                    </div>\r\n                    <div class=\"col-lg-12\">\r\n                        <div class=\"row\">\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-lg-4\">\r\n                <div class=\"blog_right_sidebar\">\r\n                    <aside class=\"single_sidebar_widget search_widget\">\r\n                        <div class=\"input-group\">\r\n                            <input #key #keyControl=\"ngModel\" class=\"form-control\" type=\"text\" [(ngModel)]=\"key.value\"\r\n                                placeholder=\"Buscar\" (keydown.enter)=\"search(key.value)\">\r\n                            <span class=\"input-group-btn\">\r\n                                <button class=\"btn btn-default\" type=\"button\">\r\n                                    <i class=\"lnr lnr-magnifier\"></i>\r\n                                </button>\r\n                            </span>\r\n                            <!--<input type=\"hidden\" name=\"_csrf\" value=\"{{token}}\" /> -->\r\n                        </div>\r\n                        <!-- /input-group -->\r\n                        <div class=\"br\"></div>\r\n                    </aside>\r\n                    <aside class=\"single_sidebar_widget popular_post_widget\">\r\n                        <h3 class=\"widget_title\">Posts populares</h3>\r\n                        <div *ngFor=\"let blogitem of blogs\">\r\n                            <div class=\"media post_item card-blog\">\r\n                                <img *ngIf=\"blogitem.image\" src=\"assets{{blogitem.image}}\" width=\"100\" height=\"50\"\r\n                                    alt=\"post\">\r\n                                <div class=\"media-body\">\r\n                                    <h3 class=\"card-blog__title\"><a ([routerLink]=\"['/singleBlog', blogitem.id]\"\r\n                                            )>{{blogitem.name}}</a></h3>\r\n                                    <p></p>\r\n                                    <br>\r\n                                    <!--{{day}}/{{month}}/{{year}}-->\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"br\"></div>\r\n                    </aside>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n<!--================Blog Area =================-->","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","\r\n<html>\r\n    <body>\r\n        <meta charset=\"UTF-8\">\r\n        <!--================ Start footer Area  =================-->\t\r\n\t<footer class=\"footer\">\r\n\t\t<div class=\"footer-area\">\r\n\t\t\t<div class=\"container\">\r\n\t\t\t\t<div class=\"row section_gap\">\r\n\t\t\t\t\t<div class=\"col-lg-3 col-md-6 col-sm-6\">\r\n\t\t\t\t\t\t<div class=\"single-footer-widget tp_widgets\">\r\n\t\t\t\t\t\t\t<h4 class=\"footer_title large_title\">Objetivo</h4>\r\n\t\t\t\t\t\t\t<p>\r\n                Nuestro objetivo es proporcionar a los amantes de los comics, mangas y videojuegos \r\n                las figuras de sus personajes favoritos.  \r\n              </p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"offset-lg-1 col-lg-2 col-md-6 col-sm-6\">\r\n\t\t\t\t\t\t<div class=\"single-footer-widget tp_widgets\">\r\n\t\t\t\t\t\t\t<h4 class=\"footer_title\">Atajos</h4>\r\n\t\t\t\t\t\t\t<ul class=\"list\">\r\n\t\t\t\t\t\t\t\t<li><a [routerLink]=\"['/']\">Inicio</a></li>\r\n\t\t\t\t\t\t\t\t<li><a [routerLink]=\"['/blog']\">Blog</a></li>\r\n\t\t\t\t\t\t\t\t<li><a [routerLink]=\"['/product']\">Productos</a></li>\r\n\t\t\t\t\t\t\t\t<!--<li><a href=\"/shoppingCart\">Cesta</a></li>-->\r\n\t\t\t\t\t\t\t\t<!-- <li><a href=\"/contact\">Contacto</a></li> -->\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<!-- <div class=\"col-lg-2 col-md-6 col-sm-6\">\r\n\t\t\t\t\t\t<div class=\"single-footer-widget instafeed\">\r\n\t\t\t\t\t\t\t<h4 class=\"footer_title\">Galer&iacute;a</h4>\r\n\t\t\t\t\t\t\t<ul class=\"list instafeed d-flex flex-wrap\">\r\n\t\t\t\t\t\t\t\t<li><img src=\"/img/gallery/r1.jpg\" alt=\"\"></li>\r\n\t\t\t\t\t\t\t\t<li><img src=\"/img/gallery/r2.jpg\" alt=\"\"></li>\r\n\t\t\t\t\t\t\t\t<li><img src=\"/img/gallery/r3.jpg\" alt=\"\"></li>\r\n\t\t\t\t\t\t\t\t<li><img src=\"/img/gallery/r5.jpg\" alt=\"\"></li>\r\n\t\t\t\t\t\t\t\t<li><img src=\"/img/gallery/r7.jpg\" alt=\"\"></li>\r\n\t\t\t\t\t\t\t\t<li><img src=\"/img/gallery/r8.jpg\" alt=\"\"></li>\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div> -->\r\n\t\t\t\t\t<div class=\"offset-lg-1 col-lg-3 col-md-6 col-sm-6\">\r\n\t\t\t\t\t\t<div class=\"single-footer-widget tp_widgets\">\r\n\t\t\t\t\t\t\t<h4 class=\"footer_title\">Contáctanos</h4>\r\n\t\t\t\t\t\t\t<div class=\"ml-40\">\r\n\t\t\t\t\t\t\t\t<p class=\"sm-head\">\r\n\t\t\t\t\t\t\t\t\t<mat-icon> map</mat-icon>\r\n\t\t\t\t\t\t\t\t\tSede\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t<p>Calle Tulipán, 5<br> Móstoles, Madrid</p>\r\n\t\r\n\t\t\t\t\t\t\t\t<p class=\"sm-head\">\r\n\t\t\t\t\t\t\t\t\t<mat-icon>phone_in_talk</mat-icon>\r\n\t\t\t\t\t\t\t\t\tNúmero de teléfono\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t+34 600 11 08 11 <br>\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\r\n\t\t\t\t\t\t\t\t<p class=\"sm-head\">\r\n\t\t\t\t\t\t\t\t\t<mat-icon> email</mat-icon>\r\n\t\t\t\t\t\t\t\t\tEmail\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\tanimeshopdaw2020@gmail.com <br>\r\n\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"footer-bottom\">\r\n\t\t\t<div class=\"container\">\r\n\t\t\t\t<div class=\"row d-flex\">\r\n\t\t\t\t\t<p class=\"col-lg-12 footer-text text-center\">\r\n\t\t\t\t\t\t<!-- Link back to Colorlib can't be removed. Template is licensed under CC BY 3.0. -->\r\nCopyright &copy;<script>document.write(new Date().getFullYear());</script> All rights reserved | This template is made with <i class=\"fa fa-heart\" aria-hidden=\"true\"></i> by <a href=\"https://colorlib.com\" target=\"_blank\">Colorlib</a>\r\n<!-- Link back to Colorlib can't be removed. Template is licensed under CC BY 3.0. --></p>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</footer>\r\n\t<!--================ End footer Area  =================-->\r\n\r\n\r\n\t<!--<script src=\"https://canvasjs.com/assets/script/canvasjs.min.js\"></script>\r\n    <script src=\"/vendors/jquery/jquery-3.2.1.min.js\"></script>\r\n    <script src=\"/vendors/bootstrap/bootstrap.bundle.min.js\"></script>\r\n    <script src=\"/vendors/skrollr.min.js\"></script>\r\n    <script src=\"/vendors/owl-carousel/owl.carousel.min.js\"></script>\r\n    <script src=\"/vendors/nice-select/jquery.nice-select.min.js\"></script>\r\n    <script src=\"/vendors/jquery.form.js\"></script>\r\n    <script src=\"/vendors/jquery.validate.min.js\"></script>\r\n    <script src=\"/js/main.js\"></script>\r\n    <script src=\"/js/sum.js\"></script>\r\n    <script src=\"/js/remove-product.js\"></script>\r\n    <script src=\"/js/show-password.js\"></script>-->\r\n</body>\r\n</html>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { OrderService } from '../order/order.service';\r\nimport { LoginService, User } from '../auth/login.service';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  user: User;\r\n\r\n  constructor(private router: Router, private order: OrderService, public service: LoginService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  logOut() {\r\n    this.service.logout().subscribe(\r\n        (response) => {\r\n            this.router.navigate(['/']);\r\n        },\r\n        (error) => console.log('Error when trying to log out: ' + error),\r\n    );\r\n  }\r\n\r\n}\r\n","<html>\r\n<header class=\"header_area\">\r\n  <div class=\"main_menu\">\r\n    <nav class=\"navbar navbar-expand-lg navbar-light header-background\">\r\n      <div class=\"container\">\r\n        <a class=\"navbar-brand logo_h\" href=\"/\"><img src=\"assets/img/shop-logo.png\" alt=\"\"></a>\r\n        <div class=\"collapse navbar-collapse offset\" id=\"navbarSupportedContent\">\r\n          <ul class=\"nav navbar-nav menu_nav ml mr-auto\">\r\n            <li class=\"nav-item\"><a mat-flat-button [disableRipple]=\"true\" class=\"nav-link transparent\" [routerLink]=\"['/']\">Inicio</a></li>\r\n            <li class=\"nav-item ml2\"><a mat-flat-button [disableRipple]=\"true\" class=\"nav-link transparent\"  [routerLink]=\"['/product']\">Comprar</a></li>\r\n            <li class=\"nav-item ml2\"><a mat-flat-button [disableRipple]=\"true\" class=\"nav-link transparent\" [routerLink]=\"['/blog']\">Blog</a></li>\r\n            <li class=\"nav-item ml2\">\r\n              <div class=\"dropdown\">\r\n                <button mat-flat-button class=\"dropbtn\" [disableRipple]=\"true\">Usuario</button>\r\n                  <div class=\"dropdown-content\" *ngIf=\"!service.isLogged\">\r\n                    <a mat-flat-button class=\"submenu\" [disableRipple]=\"true\" [routerLink]=\"['/login']\">Iniciar sesión</a>\r\n                    <a mat-flat-button class=\"submenu\" [disableRipple]=\"true\" [routerLink]=\"['/register']\">Registrarse</a>\r\n                  </div>\r\n                  <div class=\"dropdown-content\" *ngIf=\"service.isLogged\">\r\n                    <a mat-flat-button class=\"submenu\" [disableRipple]=\"true\" [routerLink]=\"['/userPage', service.getCurrentUserId()]\">Mi perfil</a>\r\n                      <a mat-flat-button class=\"submenu\" [disableRipple]=\"true\" (click)=\"logOut()\">Cerrar sesión</a>\r\n                  </div>\r\n              </div>\r\n            </li>\r\n          </ul>\r\n          <!--<ul class=\"nav navbar-nav menu_nav ml-auto mr-auto\">\r\n            <li class=\"nav-item\"><a class=\"nav-link\" [routerLink]=\"['/']\">Inicio</a></li>\r\n            <li class=\"nav-item\"><a class=\"nav-link\"  [routerLink]=\"['/product']\">Comprar</a></li>\r\n            <li class=\"nav-item\"><a class=\"nav-link\" [routerLink]=\"['/blog']\">Blog</a></li>\r\n            <li class=\"nav-item\"><a class=\"nav-link\" [routerLink]=\"['/order']\">Carrito</a></li>\r\n            <li class=\"nav-item submenu dropdown\">\r\n              <a href=\"#\" class=\"nav-link dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\"\r\n                aria-expanded=\"false\">Usuarios</a>\r\n                <ul class=\"dropdown-menu\">\r\n                <div *ngIf=\"!service.isLogged\">\r\n                <li class=\"nav-item\"><a class=\"nav-link\" [routerLink]=\"['/login']\">Iniciar sesión</a></li>\r\n                <li class=\"nav-item\"><a class=\"nav-link\" [routerLink]=\"['/register']\">Registrarse</a></li>\r\n                </div>\r\n              <div *ngIf=\"service.isLogged\">\r\n                <div>\r\n                  <form action=\"/logout\" method=\"post\">\r\n                    <li class=\"nav-item\"><a href=\"/\"></a><button (click)=\"logOut()\" class=\"nav-link\" href=\"/\">Cerrar sesión</button></li>\r\n                  </form>\r\n                </div>\r\n                <li class=\"nav-item\"><a class=\"nav-link\" href=\"/trackingOrder\">Seguimiento</a></li>\r\n                <li class=\"nav-item\"><a class=\"nav-link\" [routerLink]=\"['/userPage', user.id]\">Mi perfil</a></li>\r\n              </div>\r\n            </ul>\r\n            </li>-->\r\n            <!-- <li class=\"nav-item\"><a class=\"nav-link\" href=\"contact\">Contacto</a></li> -->\r\n          <!--</ul>-->\r\n\r\n          <!--<ul class=\"nav-shop\">-->\r\n            <!-- <li class=\"nav-item\"><button><i class=\"ti-search\"></i></button></li> -->\r\n            <!--{{#cartSize}}\r\n            <li class=\"nav-item\"><button onclick=\"location.href='/shoppingCart'\"><i class=\"ti-shopping-cart\"></i><span class=\"nav-shop__circle\">{{cartSize}}</span></button> </li>\r\n            {{/cartSize}}-->\r\n            <p>\r\n              <button mat-icon-button [disableRipple]=\"true\" class=\"mr cart\" [routerLink]=\"['/order']\"><mat-icon matBadgePosition=\"after\">shopping_cart</mat-icon>\r\n              </button>\r\n            </p>\r\n            <a mat-flat-button [disableRipple]=\"true\" class=\"shop button-header\" [routerLink]=\"['/product']\">Comprar ahora</a>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  </div>\r\n</header>\r\n</html>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Product } from '../product/product.model';\r\nimport { ProductService } from '../product/product.service';\r\nimport { BlogService } from '../blog/blog.service';\r\nimport { Blog } from '../blog/blog.model';\r\nimport { ProductAmount} from '../product/productamount.model';\r\nimport { OrderService } from '../order/order.service';\r\nimport { Order } from '../order/order.model';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'app-home',\r\n    templateUrl: './home.component.html',\r\n    styleUrls: ['./home.component.css']\r\n  })\r\n  \r\n  export class HomeComponent implements OnInit{\r\n\r\n    products: Product[];\r\n    blogs: Blog[];\r\n    pAmount: ProductAmount;\r\n    order: Order;\r\n\r\n    constructor(private productService: ProductService,private blogService: BlogService, private orderService: OrderService, private router: Router) {\r\n      this.order = {status: '', productList: [], total: 0, day: 0, month: 0, year: 0}\r\n    }\r\n    ngOnInit() {\r\n        this.productService.getAllProducts().subscribe(\r\n          products => this.products = products,\r\n          error => console.log(error)\r\n        );\r\n        this.blogService.getAllBlogs().subscribe(\r\n          blogs => this.blogs = blogs,\r\n          error => console.log(error)\r\n        );\r\n        this.orderService.getCurrentOrder().subscribe(\r\n      order => this.order = order,\r\n      error => console.log(error)\r\n        );\r\n    }\r\n\r\n    addProductToOrder(productAux: Product, qt: number){\r\n      let productAmount = { product: productAux, amount: qt }\r\n      this.pAmount = productAmount;\r\n      this.orderService.addProduct(this.pAmount, this.order.id ).subscribe(\r\n        order => { this.order = order;\r\n                    this.router.navigate(['/order']);\r\n        },error => console.log(error));\r\n    }\r\n  }","<meta charset=\"UTF-8\">\r\n<!--<main class=\"site-main\">-->\r\n\r\n<!--================ Hero banner start =================-->\r\n<section class=\"hero-banner\">\r\n    <div class=\"container\">\r\n        <div class=\"row no-gutters align-items-center pt-60px\">\r\n            <div class=\"col-5 d-none d-sm-block\">\r\n                <div class=\"hero-banner__img\">\r\n                    <img class=\"img-fluid\" src=\"/assets/img/home/Fullmetal Alchemist - Alphonse Elric.jpg\" alt=\"\">\r\n                </div>\r\n            </div>\r\n            <div class=\"col-sm-7 col-lg-6 offset-lg-1 pl-4 pl-md-5 pl-lg-0\">\r\n                <div class=\"hero-banner__content\">\r\n                    <h4>No te lo pierdas</h4>\r\n                    <h1>Tu lugar sagrado para el coleccionismo</h1>\r\n                    <!-- Search form -->\r\n                    <form class=\"form-inline\" action=\"/search\" method=\"POST\">\r\n                        <div class=\"input-group filter-bar-search\">\r\n                            <input type=\"text\" placeholder=\"Buscar\" name=\"key\">\r\n                            <div class=\"input-group-append\">\r\n                                <button type=\"button\" onclick='this.form.submit();'>\r\n                                    <i class=\"ti-search\"></i>\r\n                                </button>\r\n                            </div>\r\n                            <input type=\"hidden\" name=\"_csrf\" />\r\n                            <!--value=\"{{token}}\"-->\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n<!--================ Hero banner start =================-->\r\n\r\n<!-- ================ Best Selling item  carousel ================= -->\r\n<section class=\"related-product-area\">\r\n\t<div class=\"container\">\r\n\t\t<section class=\"section-margin calc-60px\">\r\n\t\t\t<div class=\"container\">\r\n\t\t\t\t<div class=\"section-intro pb-60px\">\r\n\t\t\t\t\t<p>Descubre el coleccionismo</p>\r\n\t\t\t\t\t<h2>\r\n\t\t\t\t\t\tNuestras <span class=\"section-intro__style\">figuras</span>\r\n\t\t\t\t\t</h2>\r\n\t\t\t\t</div>\r\n\t\t\t\t<mat-tab-group>\r\n\t\t\t\t\t<div *ngFor=\"let product of products\">\r\n\t\t\t\t\t\t<mat-tab label=\"{{product.name}}\"><div class=\"card text-center card-product\">\r\n\t\t\t\t\t\t\t<div class=\"card-product__img\">\r\n\t\t\t\t\t\t\t\t<img class=\"img-fluid\" src=\"/assets{{product.image}}\" alt=\"\" width=\"300\"\r\n\t\t\t\t\t\t\t\t\theight=\"300\">\r\n\t\t\t\t\t\t\t\t<ul class=\"card-product__imgOverlay\">\r\n\t\t\t\t\t\t\t\t\t<li><button [routerLink]=\"['/singleProduct', product.id]\">\r\n\t\t\t\t\t\t\t\t\t\t\t<mat-icon class=\"material-icons md-18 md-light\">search</mat-icon>\r\n\t\t\t\t\t\t\t\t\t\t</button></li>\r\n\t\t\t\t\t\t\t\t\t<li><button>\r\n\t\t\t\t\t\t\t\t\t\t\t<mat-icon class=\"material-icons md-18 md-light\" (click)=\"addProductToOrder(product,1)\">add_shopping_cart\r\n\t\t\t\t\t\t\t\t\t\t\t</mat-icon>\r\n\t\t\t\t\t\t\t\t\t\t</button></li>\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class=\"card-body\">\r\n\t\t\t\t\t\t\t\t<p>{{product.franchise}}</p>\r\n\t\t\t\t\t\t\t\t<h4 class=\"card-product__title\">\r\n\t\t\t\t\t\t\t\t\t<a [routerLink]=\"['/singleProduct', product.id]\">{{product.name}}</a>\r\n\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t<p class=\"card-product__price\">{{product.price}}€</p>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div></mat-tab>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</mat-tab-group>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t</div>\r\n</section>\r\n<!-- ================ Best Selling item  carousel end ================= -->\r\n\r\n<!-- ================ Blog section start ================= -->\r\n<section class=\"blog\">\r\n    <div class=\"container\">\r\n        <div class=\"section-intro pb-60px\">\r\n            <p>Entradas del blog</p>\r\n            <h2>\r\n                Últimas <span class=\"section-intro__style\">Noticias</span>\r\n            </h2>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div *ngFor=\"let blog of blogs\">\r\n                <div class=\"card text-center card-blog\">\r\n                    <div class=\"card card-blog\">\r\n                        <div class=\"card-blog__img\">\r\n                            <img class=\"card-img rounded-0\" src=\"assets{{blog.image}}\" alt=\"\">\r\n                        </div>\r\n                        <div class=\"card-body\">\r\n                            <ul class=\"card-blog__info\">\r\n                                <li><a href=\"#\">Autor: {{blog.author}}</a></li>\r\n                            </ul>\r\n                            <h4 class=\"card-blog__title\">\r\n                                <a [routerLink]=\"['/singleBlog', blog.id]\">{{blog.name}}</a>\r\n                            </h4>\r\n                            <p>{{blog.text}}</p>\r\n                            <a class=\"card-blog__link\" [routerLink]=\"['/singleBlog', blog.id]\">Leer más <i\r\n                                    class=\"ti-arrow-right\"></i></a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n<!-- ================ Blog section end ================= -->\r\n<!--</main>-->\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { LoginService, User } from '../auth/login.service';\r\nimport {FormControl, Validators} from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  constructor(private router: Router, public service: LoginService, ) { }\r\n\r\n  user: User;\r\n  hide = true;\r\n  pass = new FormControl('', [Validators.required]);\r\n  name = new FormControl('', [Validators.required]);\r\n\r\n  logIn(name: string, pass: string) {\r\n\r\n    this.service.login(name, pass).subscribe(\r\n        (u) => {\r\n            console.log(u);\r\n            this.router.navigate(['/']);\r\n        },\r\n        (error) => alert('Invalid user or password'),\r\n    );\r\n  }\r\n\r\n  logOut() {\r\n    this.service.logout().subscribe(\r\n        (response) => {\r\n            this.router.navigate(['/']);\r\n        },\r\n        (error) => console.log('Error when trying to log out: ' + error),\r\n    );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if(this.service.isLogged)\r\n          this.router.navigate(['/userPage/' + this.service.getCurrentUserId()])\r\n  }\r\n\r\n  getErrorMessage() {\r\n    if (this.pass.hasError('required')) {\r\n      return 'Introduzca un valor';\r\n    }\r\n    if (this.name.hasError('required')) {\r\n      return 'Introduzca un valor';\r\n    }\r\n  }\r\n\r\n}\r\n","<meta charset=\"UTF-8\">\r\n<!-- ================ start banner area ================= -->\r\n<mat-card class=\"blog-banner-area\" id=\"category\">\r\n\t<img src=\"assets/banner/sao.png\" style=\"float:left;width:100%;height:100%;object-fit:cover;opacity: 0.3;\">\r\n\t<div class=\"container h-100\">\r\n\t\t<div class=\"blog-banner\">\r\n\t\t\t<div class=\"text-center\">\r\n\t\t\t\t<h1>Login / Registro</h1>\r\n\t\t\t\t<nav aria-label=\"breadcrumb\" class=\"banner-breadcrumb\">\r\n\t\t\t\t\t<ol class=\"breadcrumb\">\r\n\t\t\t\t\t\t<li class=\"breadcrumb-item\"><a href=\"/\">Inicio</a></li>\r\n\t\t\t\t\t\t<li class=\"breadcrumb-item active\" aria-current=\"page\">Login/Registro</li>\r\n\t\t\t\t\t</ol>\r\n\t\t\t\t</nav>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</mat-card>\r\n<!-- ================ end banner area ================= -->\r\n\r\n<!--================Login Box Area =================-->\r\n<mat-card class=\"login_box_area section-margin\">\r\n\t<div class=\"container\">\r\n\t\t<div class=\"row\">\r\n\t\t\t<div class=\"col-lg-6\">\r\n\t\t\t\t<div class=\"login_box_img\">\r\n\t\t\t\t\t<div class=\"hover\">\r\n\t\t\t\t\t\t<h4>¿Eres nuevo?</h4>\r\n\t\t\t\t\t\t<p>Tenemos un montón de figuritas y accesorios exclusivos que podrían interesarte</p>\r\n\t\t\t\t\t\t<a class=\"button button-account\" [routerLink]=\"['/register']\">Crear una cuenta</a>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"col-lg-6\">\r\n\t\t\t\t<div class=\"login_form_inner\">\r\n\t\t\t\t\t<h3>Inicia sesión para acceder</h3>\r\n\t\t\t\t\t<form class=\"row login_form\" id=\"contactForm\">\r\n\t\t\t\t\t\t<mat-form-field appearance=\"fill\" class=\"col-md-12\">\r\n\t\t\t\t\t\t\t<mat-label>Usuario</mat-label>\r\n\t\t\t\t\t\t\t<input matInput [formControl]=\"name\" required>\r\n\t\t\t\t\t\t\t<mat-error *ngIf=\"name.invalid\">{{getErrorMessage()}}</mat-error>\r\n\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t<mat-form-field appearance=\"fill\" class=\"col-md-12\">\r\n\t\t\t\t\t\t\t<mat-label>Contraseña</mat-label>\r\n\t\t\t\t\t\t\t<input matInput [type]=\"hide ? 'password' : 'text'\" [formControl]=\"pass\" required>\r\n\t\t\t\t\t\t\t<mat-error *ngIf=\"pass.invalid\">{{getErrorMessage()}}</mat-error>\r\n\t\t\t\t\t\t\t<button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\r\n\t\t\t\t\t\t\t<mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t<div class=\"col-md-12 form-group\">\r\n\t\t\t\t\t\t\t<button type=\"submit\" value=\"submit\" class=\"button button-login w-100\"\r\n\t\t\t\t\t\t\t\t(click)=\"logIn(name.value, pass.value)\" (keydown.enter)=\"logIn(name.value, pass.value)\">Iniciar sesión</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</mat-card>\r\n<!--================End Login Box Area =================-->","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LoginService, User } from '../auth/login.service';\r\nimport { Order } from '../order/order.model'\r\nimport { Address } from '../auth/address.model';\r\nimport {FormControl, Validators} from '@angular/forms';\r\n\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class RegisterComponent {\r\n\r\n  user: User;\r\n  address: Address;\r\n  orderList: Order[] = [];\r\n  hide = true;\r\n  pass = new FormControl('', [Validators.required]);\r\n  name = new FormControl('', [Validators.required]);\r\n  users: User[] = [];\r\n\r\n  constructor(private router: Router, activatedRoute: ActivatedRoute, private service: LoginService) {\r\n    this.address = { shippingname: '', lastname: '', company: '', number: '', email: '', street: '', floor: '', city: '', country: '', zipcode: '' }\r\n    this.user = { name: '', passwordHash: '', delivery: this.address, orderList: this.orderList, roles: ['ROLE_USER'] }\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if(this.service.isLogged)\r\n          this.router.navigate(['/userPage/' + this.service.getCurrentUserId()])\r\n  }\r\n\r\n  getErrorMessage() {\r\n    if (this.pass.hasError('required')) {\r\n      return 'Introduzca un valor';\r\n    }\r\n    if (this.name.hasError('required')) {\r\n      return 'Introduzca un valor';\r\n    }\r\n  }\r\n\r\n/**  savUser(user: User): Observable<User> {\r\n *      const formData = new FormData();\r\n *      formData.append('name', user.name);\r\n *      formData.append('email', user.delivery.email);\r\n *     formData.append('pass', user.pass);\r\n *   return this.http.post<User>('https://localhost:8443/api/user/', formData);\r\n * }\r\n */\r\n\r\nnewUser() {\r\n  if(!this.pass.invalid && !this.name.invalid){\r\n    this.user.name = this.name.value;\r\n    this.user.passwordHash = this.pass.value;\r\n    this.service.newUser(this.user).subscribe(\r\n    _ => { this.router.navigate(['/login']);},\r\n    (error: Error) => console.error('error creating new user: ' + error));\r\n    // window.history.back();\r\n  }\r\n}\r\n\r\n}\r\n","<meta charset=\"UTF-8\">\r\n<!-- ================ start banner area ================= -->\r\n<mat-card class=\"blog-banner-area\" id=\"category\">\r\n\t<img src=\"assets/banner/black-clover.png\" style=\"float:left;width:100%;height:100%;object-fit:cover;opacity: 0.3;\">\r\n\t<div class=\"container h-100\">\r\n\t\t<div class=\"blog-banner\">\r\n\t\t\t<div class=\"text-center\">\r\n\t\t\t\t<h1>Registro</h1>\r\n\t\t\t\t<nav aria-label=\"breadcrumb\" class=\"banner-breadcrumb\">\r\n\t\t\t\t\t<ol class=\"breadcrumb\">\r\n\t\t\t\t\t\t<li class=\"breadcrumb-item\"><a href=\"#\">Inicio</a></li>\r\n\t\t\t\t\t\t<li class=\"breadcrumb-item active\" aria-current=\"page\">Registro</li>\r\n\t\t\t\t\t</ol>\r\n\t\t\t\t</nav>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</mat-card>\r\n<!-- ================ end banner area ================= -->\r\n\r\n<!--================Login Box Area =================-->\r\n<mat-card class=\"login_box_area section-margin\">\r\n\t<div class=\"container\">\r\n\t\t<div class=\"row\">\r\n\t\t\t<div class=\"col-lg-6\">\r\n\t\t\t\t<div class=\"login_box_img\">\r\n\t\t\t\t\t<div class=\"hover\">\r\n\t\t\t\t\t\t<h4>¿Ya tienes una cuenta?</h4>\r\n\t\t\t\t\t\t<p>Tenemos un montón de figuritas y accesorios exclusivos que podrían interesarte</p>\r\n\t\t\t\t\t\t<a class=\"button button-account\" [routerLink]=\"['/login']\">Inicar sesión</a>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"col-lg-6\">\r\n\t\t\t\t<div class=\"login_form_inner register_form_inner\">\r\n\t\t\t\t\t<h3>Crear una cuenta</h3>\r\n\t\t\t\t\t<form class=\"row login_form\" #registerForm=\"ngForm\">\r\n\r\n\t\t\t\t\t\t<!--<div class=\"col-md-12 form-group\">\r\n\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" [(ngModel)]=\"user.name\" id=\"name\" name=\"name\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Usuario\" onfocus=\"this.placeholder = ''\"\r\n\t\t\t\t\t\t\t\tonblur=\"this.placeholder = 'Username'\">\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"col-md-12 form-group\">\r\n\t\t\t\t\t\t\t<input matInput type=\"email\" class=\"form-control\" id=\"email\" [(ngModel)]=\"user.delivery.email\"\r\n\t\t\t\t\t\t\t\tname=\"email\" placeholder=\"Correo electrónico\" onfocus=\"this.placeholder = ''\"\r\n\t\t\t\t\t\t\t\tonblur=\"this.placeholder = 'Email'\">\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"col-md-12 form-group\">\r\n\t\t\t\t\t\t\t<input matInput [type]=\"hide ? 'password' : 'text'\" class=\"form-control\" \r\n\t\t\t\t\t\t\t\t[(ngModel)]=\"user.passwordHash\" name=\"password\" placeholder=\"Contraseña\"\r\n\t\t\t\t\t\t\t\tonfocus=\"this.placeholder = ''\" onblur=\"this.placeholder = 'Contraseña'\">\r\n\t\t\t\t\t\t\t\t<button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\r\n\t\t\t\t\t\t\t\t\t<mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t<span data-toggle=\"#password-edit\"\r\n\t\t\t\t\t\t\t\tclass=\"fa fa-fw fa-eye field-icon toggle-password\"></span>\r\n\t\t\t\t\t\t</div>-->\r\n\t\t\t\t\t\t<mat-form-field appearance=\"fill\" class=\"col-md-12\">\r\n\t\t\t\t\t\t\t<mat-label>Usuario</mat-label>\r\n\t\t\t\t\t\t\t<input matInput [formControl]=\"name\" required>\r\n\t\t\t\t\t\t\t<mat-error *ngIf=\"name.invalid\">{{getErrorMessage()}}</mat-error>\r\n\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t<mat-form-field appearance=\"fill\" class=\"col-md-12\">\r\n\t\t\t\t\t\t\t<mat-label>Email</mat-label>\r\n\t\t\t\t\t\t\t<input matInput>\r\n\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t<mat-form-field appearance=\"fill\" class=\"col-md-12\">\r\n\t\t\t\t\t\t\t<mat-label>Contraseña</mat-label>\r\n\t\t\t\t\t\t\t<input matInput [type]=\"hide ? 'password' : 'text'\" [formControl]=\"pass\" required>\r\n\t\t\t\t\t\t\t<mat-error *ngIf=\"pass.invalid\">{{getErrorMessage()}}</mat-error>\r\n\t\t\t\t\t\t\t<button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\r\n\t\t\t\t\t\t\t<mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t<div class=\"col-md-12 form-group\">\r\n\t\t\t\t\t\t\t<button mat-button type=\"submit\" value=\"submit\" class=\"button button-register w-100 add\" (click)=\"newUser()\">Registrarse</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</mat-card>\r\n<!--================End Login Box Area =================-->","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LoginService, User } from '../auth/login.service';\r\n\r\n@Component({\r\n  selector: 'app-useredit',\r\n  templateUrl: './userEdit.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class UserEditComponent /*implements OnInit*/ {\r\n\r\n  user: User;\r\n\r\n  constructor(private router: Router, activatedRoute: ActivatedRoute, private service: LoginService) {\r\n    const id = activatedRoute.snapshot.params.id;\r\n    console.log(\"id, \" + id);\r\n    this.service.getUserById(this.service.user.id).subscribe(\r\n      user => this.user = user,\r\n      error => console.log(error)\r\n    );\r\n    //this.user = service.user;\r\n    console.log(service.user)\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if(!this.service.isLogged)\r\n          this.router.navigate(['/login/'])\r\n    this.service.getUserById(this.service.user.id).subscribe(\r\n      user => this.user = user,\r\n      error => console.log(error)\r\n    );\r\n  }\r\n\r\n  saveInfo(){\r\n      this.service.saveUser(this.user).subscribe(\r\n        user => { this.user = user;\r\n                  this.router.navigate(['/userPage/' + this.service.getCurrentUserId()]);\r\n        },error => console.log(error));\r\n  }\r\n\r\n}","<meta charset=\"UTF-8\">\r\n        <!--================ Hero banner start =================-->\r\n        <section class=\"hero-banner\">\r\n            <div class=\"container\">\r\n                <div class=\"row no-gutters align-items-center pt-60px\">\r\n                    <div class=\"col-5 d-none d-sm-block\">\r\n                        <div class=\"hero-banner__img\">\r\n                            <img class=\"img-fluid\" src=\"../assets/img/user/login.jpg\" alt=\"\">\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-7 col-lg-6 offset-lg-1 pl-4 pl-md-5 pl-lg-0\">\r\n                        <div class=\"hero-banner__content\">\r\n                            <div class=\"col-md-6 form-group p_star mg-top\">\r\n                            \t<h5>Nombre</h5>\r\n                                <input type=\"text\" class=\"form-control\" name=\"name\" required [(ngModel)]=\"user.delivery.shippingname\">\r\n                            \t<span class=\"placeholder\" data-placeholder=\"Name\"></span>\r\n                        \t</div>\r\n                            <div class=\"col-md-6 form-group p_star\">\r\n                            \t<h5>Apellidos</h5>\r\n                            \t<input type=\"text\" class=\"form-control\" name=\"name\" required [(ngModel)]=\"user.delivery.lastname\">\r\n                            \t<span class=\"placeholder\" data-placeholder=\"Lastname\"></span>\r\n                        \t</div>\r\n                        \t<div class=\"col-md-6 form-group p_star\">\r\n                        \t\t<h5>Empresa</h5>\r\n                            \t<input type=\"text\" class=\"form-control\" name=\"name\" required [(ngModel)]=\"user.delivery.company\">\r\n                        \t</div>\r\n                        \t<div class=\"col-md-6 form-group p_star\">\r\n                        \t\t<h5>Número</h5>\r\n                            \t<input type=\"text\" class=\"form-control\" name=\"name\" required [(ngModel)]=\"user.delivery.number\">\r\n                            \t<span class=\"placeholder\" data-placeholder=\"Phone number\"></span>\r\n                        \t</div>\r\n                        \t<div class=\"col-md-12 form-group p_star\">\r\n                        \t\t<h5>Correo electrónico</h5>\r\n                            \t<input type=\"text\" class=\"form-control\" name=\"name\" required [(ngModel)]=\"user.delivery.email\">\r\n                            \t<span class=\"placeholder\" data-placeholder=\"Email Address\"></span>\r\n                        \t</div>\r\n                        \t<div class=\"col-md-12 form-group p_star\">\r\n                        \t\t<h5>Calle</h5>\r\n                                <input type=\"text\" class=\"form-control\" name=\"name\" required [(ngModel)]=\"user.delivery.street\">\r\n\t                            <span class=\"placeholder\" data-placeholder=\"Address line 01\"></span>\r\n\t                        </div>\r\n\t                        <div class=\"col-md-6 form-group p_star\">\r\n\t                        \t<h5>Piso</h5>\r\n\t                            <input type=\"text\" class=\"form-control\" name=\"name\" required [(ngModel)]=\"user.delivery.floor\">\r\n\t                            <span class=\"placeholder\" data-placeholder=\"Address line 02\"></span>\r\n\t                        </div>\r\n\t                        <div class=\"col-md-6 form-group p_star\">\r\n\t                        \t<h5>Ciudad</h5>\r\n\t                            <input type=\"text\" class=\"form-control\" name=\"name\" required [(ngModel)]=\"user.delivery.city\">\r\n\t                            <span class=\"placeholder\" data-placeholder=\"Town/City\"></span>\r\n\t                        </div>\r\n\t                        <div class=\"col-md-6 form-group p_star\">\r\n\t                        \t<h5>País</h5>\r\n\t                            <input type=\"text\" class=\"form-control\" name=\"name\" required [(ngModel)]=\"user.delivery.country\">\r\n\t                            <span class=\"placeholder\" data-placeholder=\"Country\"></span>\r\n\t                        </div>\r\n\t                        <div class=\"col-md-6 form-group\">\r\n\t                        \t<h5>Código postal</h5>\r\n\t                            <input type=\"text\" class=\"form-control\" name=\"name\" required [(ngModel)]=\"user.delivery.zipcode\">\r\n\t                        </div><br>\r\n\t                        <!--<div class=\"col-md-6 form-group\">\r\n\t                        \t<h5>Nueva contraseña</h5>\r\n\t                            <input type=\"password\" id=\"password-edit\" class=\"form-control\" id=\"password\" name=\"password\" placeholder=\"Nueva contraseña\" required [(ngModel)]=\"user.passwordHash\">\r\n\t                            <span data-toggle=\"#password-edit\" class=\"fa fa-fw fa-eye field-icon toggle-password\"></span>\r\n\t                        </div>-->\r\n                            <!-- <h5>Contraseña:</h5>\r\n                            <input type=\"password\" id=\"newpass\" size=\"50\" name=\"contraseña\" style=\"margin-bottom: 30px;\"\r\n                                placeholder=\"Nueva contraseña\">\r\n                            <input type=\"password\" id=\"newpass\" size=\"50\" name=\"contraseña\" style=\"margin-bottom: 30px;\"\r\n                                placeholder=\"Repita la nueva contraseña\">-->\r\n\r\n                            <div class=\"row\">\r\n                                <button type=\"submit\" class=\"button-edit2 button-hero\" form=\"new-info\" (click)=\"saveInfo()\">Actualizar</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LoginService, User } from '../auth/login.service';\r\nimport { Metric } from '../order/metric.model';\r\nimport { OrderService } from '../order/order.service';\r\n\r\n@Component({\r\n  selector: 'app-userpage',\r\n  templateUrl: './userPage.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class UserPageComponent /*implements OnInit*/ {\r\n\r\n  user: User;\r\n  metrics: Metric[];\r\n  average: number;\r\n  lastMetric: Metric;\r\n\r\n  constructor(private router: Router, activatedRoute: ActivatedRoute, public service: LoginService, oService: OrderService) {\r\n    const id = activatedRoute.snapshot.params.id;\r\n    oService.getAllMetrics().subscribe(\r\n      (metrics => {\r\n        this.metrics = metrics,\r\n        this.lastMetric = this.metrics[this.metrics.length - 1],\r\n        this.average = this.lastMetric.average,\r\n        this.lastMetric.averageToPrint = this.lastMetric.average.toFixed(2),\r\n        this.metrics.shift();\r\n\r\n      }),\r\n      error => console.log(error),\r\n    )\r\n\r\n    oService.getMetrics\r\n    \r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if(!this.service.isLogged)\r\n          this.router.navigate(['/login/'])\r\n    this.service.getUserById(this.service.user.id).subscribe(\r\n      user => this.user = user,\r\n      error => console.log(error)\r\n    );\r\n  }\r\n\r\n}\r\n","<meta charset=\"UTF-8\">\r\n<!--================ Hero banner start =================-->\r\n<section class=\"hero-banner\">\r\n  <div *ngIf=\"user\">\r\n\t<div class=\"container\">\r\n\t\t<div class=\"row no-gutters align-items-center pt-60px\">\r\n\t\t\t<div class=\"col-5 d-none d-sm-block\">\r\n\t\t\t\t<div class=\"hero-banner__img\">\r\n\t\t\t\t\t<img class=\"img-fluid\" src=\"assets/user/login.jpg\" alt=\"\">\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"col-sm-7 col-lg-6 offset-lg-1 pl-4 pl-md-5 pl-lg-0\">\r\n\t\t\t\t<div class=\"hero-banner__content\">\r\n\t\t\t\t\t<h4>Nombre: {{user.name}}</h4>\r\n\t\t\t\t\t<h5>Dirección de facturación:</h5>\r\n\t\t\t\t\t<h6 style=\"margin-bottom: 30px;\">Nombre: {{user.delivery.shippingname}}, Apellidos: {{user.delivery.lastname}}, Número: {{user.delivery.number}}\r\n\t\t\t\t\tDirección: {{user.delivery.street}}, {{user.delivery.floor}}, {{user.delivery.country}}, {{user.delivery.city}}, {{user.delivery.zipcode}} </h6>\r\n\t\t\t\t\t<h5>Dirección de entrega:</h5>\r\n\t\t\t\t\t<h6 style=\"margin-bottom: 30px;\">Nombre: {{user.delivery.shippingname}}, Apellidos: {{user.delivery.lastname}}, Número: {{user.delivery.number}}\r\n\t\t\t\t\t\tDirección: {{user.delivery.street}}, {{user.delivery.floor}}, {{user.delivery.country}}, {{user.delivery.city}}, {{user.delivery.zipcode}} </h6>\r\n\t\t\t\t\t<h5>Mis métodos de pago:</h5>\r\n\t\t\t\t\t<h6 id=\"payment\" style=\"margin-bottom: 30px;\">VISA que termina\r\n\t\t\t\t\t\ten 7694</h6>\r\n\r\n\t\t\t\t\t<div class=\"row\" style=\"margin-bottom: 10px;\">\r\n\t\t\t\t\t\t<div class=\"column\">\r\n\t\t\t\t\t\t\t<a class=\"button button-hero button-edit\" [routerLink]=\"['/userEdit', service.getCurrentUserId()]\"\r\n\t\t\t\t\t\t\t\tstyle=\"margin-right: 30px;\">Editar información</a>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<!-- <div class=\"column\">\r\n\t\t\t\t\t\t\t<a class=\"button button-hero\" href=\"/userEdit\">Editar\r\n\t\t\t\t\t\t\t\tinformación</a>\r\n\t\t\t\t\t\t</div>-->\r\n\t\t\t\t\t\t<div id=\"divActivites\" name=\"divActivites\" >\r\n\t\t\t\t\t\t\t<!-- <textarea id=\"inActivities\" name=\"inActivities\"\r\n\t\t\t\t\t\t\t\tstyle=\"border: solid\">\r\n    \t\t\t\t\t\t</textarea>-->\r\n\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div *ngIf=\"service.isAdmin\">\r\n\t\t\t\t\t\t<div style=\"border: 1px solid black;\">\r\n\t\t\t\t\t\t\t<div *ngFor=\"let metricitem of metrics\">\r\n\t\t\t\t\t\t\t\t<div style=\"margin: 5px;\">\r\n\t\t\t\t\t\t\t\t\t<img src=\"assets/img/blueMetrics.PNG\" height=\"20\" width=\"{{metricitem.lastMoney}}\"\r\n\t\t\t\t\t\t\t\t\talt=\"Metrics\">\r\n\t\t\t\t\t\t\t\t\t<p>{{metricitem.lastMoney}} €</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div style=\"margin: 5px;\">\r\n\t\t\t\t\t\t\t\t<img src=\"assets/img/blueMetrics.PNG\" height=\"20\" width=\"{{average}}\"\r\n\t\t\t\t\t\t\t\talt=\"Metrics\">\r\n\t\t\t\t\t\t\t\t<p>Media: {{lastMetric.averageToPrint}} €</p>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t<!--\t{{#admin}}\r\n\t\t\t\t\t<h6>Precio de los pedidos realizados.</h6>\r\n\t\t\t\t\t<div class=\"row\" style=\"border: 1px solid black;\">\r\n\t\t\t\t\t\t{{#metric}}\r\n\t\t\t\t\t\t<div class=\"column\" style=\"margin-right: 10px;\">\r\n\t\t\t\t\t\t\t<img src=\"img/blueMetrics.PNG\" height=\"{{toPrint}}\" width=\"40\"\r\n\t\t\t\t\t\t\t\talt=\"Metrics\">\r\n\t\t\t\t\t\t\t<p>{{lastMoney}} €</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t{{/metric}}\r\n\t\t\t\t\t\t<div style=\"margin-right: 10px;\">\r\n\t\t\t\t\t\t\t<img src=\"img/blueMetrics.PNG\" height=\"{{average}}\" width=\"40\"\r\n\t\t\t\t\t\t\t\talt=\"Metrics\">\r\n\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\tMedia <br /> {{average}} €\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{{/admin}}-->\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n  </div>\r\n  </div>\r\n</section>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Order } from './order.model';\r\nimport { Router } from '@angular/router';\r\nimport { OrderService } from './order.service';\r\nimport { LoginService, User } from '../auth/login.service';\r\nimport { Address } from '../auth/address.model';\r\n\r\n@Component({\r\n  selector: 'app-checkout',\r\n  templateUrl: './checkout.component.html',\r\n  styleUrls: ['./checkout.component.css']\r\n})\r\nexport class CheckoutComponent implements OnInit {\r\n\r\n  order: Order;\r\n  user: User;\r\n  dirs: Address[] = [];\r\n  tax: number = 2.90;\r\n  totalaux: number;\r\n\r\n  constructor(private router: Router, private orderService: OrderService, public loginService: LoginService) {\r\n    this.totalaux = 0;\r\n    this.order = {status: '', productList: [], total: 0, day: 0, month: 0, year: 0}\r\n   }\r\n\r\n  ngOnInit() {\r\n    if(!this.loginService.isLogged)\r\n          this.router.navigate(['/login'])\r\n    this.orderService.getCurrentOrder().subscribe(\r\n      order => {this.order = order;\r\n                this.totalaux = order.total + this.tax;\r\n                if(this.order.productList.length==0)\r\n                  this.router.navigate(['/product'])},\r\n      error => console.log(error)\r\n    );\r\n    this.loginService.getUserById(this.loginService.user.id).subscribe(\r\n        user => this.user = user,\r\n        error => console.log(error)\r\n    );\r\n    //this.totalaux = this.order.total + this.tax;\r\n  }\r\n\r\n  finish(shippingnameaux: string, lastnameaux:string, companyaux:string,numberaux:string,emailaux:string,streetaux:string,flooraux:string,cityaux:string,countryaux:string,zipcodeaux:string){\r\n    //Meter los datos dentro de la dirección del user\r\n      let auxaddress = {shippingname: shippingnameaux,\r\n                        lastname: lastnameaux,\r\n                        company: companyaux,\r\n                        number: numberaux,\r\n                        email: emailaux,\r\n                        street: streetaux,\r\n                        floor: flooraux,\r\n                        city: cityaux,\r\n                        country: countryaux,\r\n                        zipcode: zipcodeaux\r\n      }\r\n      let auxaddress2 = {shippingname: shippingnameaux,\r\n        lastname: lastnameaux,\r\n        company: companyaux,\r\n        number: numberaux,\r\n        email: emailaux,\r\n        street: streetaux,\r\n        floor: flooraux,\r\n        city: cityaux,\r\n        country: countryaux,\r\n        zipcode: zipcodeaux\r\n}\r\n      this.dirs.push(auxaddress)\r\n      this.dirs.push(auxaddress2)\r\n      this.orderService.finishOrder(this.dirs, this.order.id).subscribe(\r\n        order => this.order = order,\r\n        error => console.log(error)\r\n      );\r\n  }  \r\n\r\n}","<meta charset=\"UTF-8\">\r\n<!--================Checkout Area =================-->\r\n<section class=\"checkout_area section-margin--small\">\r\n    <div class=\"container\">\r\n        <div *ngIf=\"!loginService.isLogged\">\r\n            <app-login></app-login>\r\n        </div>\r\n        <p></p>\r\n        <div class=\"billing_details\">\r\n            <div class=\"row\" *ngIf=\"order.productList.length>0\">\r\n                <div class=\"col-lg-8\">\r\n                    <div *ngIf=\"loginService.isLogged\">\r\n                        <h3>Detalles de la dirección</h3>\r\n                        <form class=\"row contact_form\" id=\"myForm\" method=\"POST\" action=\"/confirmation\">\r\n                            <div class=\"col-md-6 form-group p_star\">\r\n                                <input matInput type=\"text\" class=\"form-control\" id=\"shippingname\"\r\n                                    name=\"user.delivery.shippingname\" placeholder=\"Nombre\"\r\n                                    [(ngModel)]=\"user.delivery.shippingname\">\r\n                                <span class=\"placeholder\" data-placeholder=\"First name\"></span>\r\n                            </div>\r\n                            <div class=\"col-md-6 form-group p_star\">\r\n                                <input matInput type=\"text\" class=\"form-control\" id=\"last\" name=\"user.delivery.lastname\"\r\n                                    placeholder=\"Apellidos\" [(ngModel)]=\"user.delivery.lastname\">\r\n                                <span class=\"placeholder\" data-placeholder=\"Last name\"></span>\r\n                            </div>\r\n                            <div class=\"col-md-6 form-group p_star\">\r\n                                <input matInput type=\"text\" class=\"form-control\" id=\"company\"\r\n                                    name=\"user.delivery.company\" placeholder=\"Empresa\"\r\n                                    [(ngModel)]=\"user.delivery.company\">\r\n                            </div>\r\n                            <div class=\"col-md-6 form-group p_star\">\r\n                                <input matInput type=\"text\" class=\"form-control\" id=\"number\" name=\"user.delivery.number\"\r\n                                    placeholder=\"Teléfono\" [(ngModel)]=\"user.delivery.number\">\r\n                                <span class=\"placeholder\" data-placeholder=\"Phone number\"></span>\r\n                            </div>\r\n                            <div class=\"col-md-6 form-group p_star\">\r\n                                <input matInput type=\"text\" class=\"form-control\" id=\"email\" name=\"user.delivery.email\"\r\n                                    placeholder=\"Correo electrónico\" [(ngModel)]=\"user.delivery.email\">\r\n                                <span class=\"placeholder\" data-placeholder=\"Email Address\"></span>\r\n                            </div>\r\n                            <div class=\"col-md-12 form-group p_star\">\r\n                                <input matInput type=\"text\" class=\"form-control\" id=\"add1\" name=\"user.delivery.street\"\r\n                                    placeholder=\"Calle\" [(ngModel)]=\"user.delivery.street\">\r\n                                <span class=\"placeholder\" data-placeholder=\"Address line 01\"></span>\r\n                            </div>\r\n                            <div class=\"col-md-6 form-group p_star\">\r\n                                <input matInput type=\"text\" class=\"form-control\" id=\"add2\" name=\"user.delivery.floor\"\r\n                                    placeholder=\"Piso\" [(ngModel)]=\"user.delivery.floor\">\r\n                                <span class=\"placeholder\" data-placeholder=\"Address line 02\"></span>\r\n                            </div>\r\n                            <div class=\"col-md-6 form-group p_star\">\r\n                                <input matInput type=\"text\" class=\"form-control\" id=\"city\" name=\"user.delivery.city\"\r\n                                    placeholder=\"Ciudad\" [(ngModel)]=\"user.delivery.city\">\r\n                                <span class=\"placeholder\" data-placeholder=\"Town/City\"></span>\r\n                            </div>\r\n                            <div class=\"col-md-6 form-group p_star\">\r\n                                <input matInput type=\"text\" class=\"form-control\" id=\"country\"\r\n                                    name=\"user.delivery.country\" placeholder=\"País\" [(ngModel)]=\"user.delivery.country\">\r\n                                <span class=\"placeholder\" data-placeholder=\"Country\"></span>\r\n                            </div>\r\n                            <div class=\"col-md-6 form-group\">\r\n                                <input matInput type=\"text\" class=\"form-control\" id=\"zip\" name=\"user.delivery.zipcode\"\r\n                                    placeholder=\"Código postal\" [(ngModel)]=\"user.delivery.zipcode\">\r\n                            </div>\r\n                            <!--<input type=\"hidden\" name=\"_csrf\" value=\"{{token}}\" />\r\n                            <div class=\"col-md-12 form-group mb-0\">\r\n                                <div class=\"creat_account\">\r\n                                    <h3>Detalles de facturaciÃ³n</h3>\r\n                                    <input type=\"checkbox\" data-toggle=\"collapse\" href=\"#collapseExample\" role=\"button\"\r\n                                        aria-expanded=\"false\" aria-controls=\"collapseExample\">\r\n                                    <label for=\"f-option3\">Enviar a una direcciÃ³n distinta</label>\r\n                                    <div class=\"collapse\" id=\"collapseExample\">\r\n                                        <div class=\"col-md-6 form-group p_star\">\r\n                                            <input type=\"text\" class=\"form-control\" id=\"first\" name=\"shippingname2\"\r\n                                                placeholder=\"Nombre\" required value={{delivery.shippingname}}>\r\n                                            <span class=\"placeholder\" data-placeholder=\"First name\"></span>\r\n                                        </div>\r\n                                        <div class=\"col-md-6 form-group p_star\">\r\n                                            <input type=\"text\" class=\"form-control\" id=\"last\" name=\"lastname2\"\r\n                                                placeholder=\"Apellidos\" required value={{delivery.lastname}}>\r\n                                            <span class=\"placeholder\" data-placeholder=\"Last name\"></span>\r\n                                        </div>\r\n                                        <div class=\"col-md-6 form-group p_star\">\r\n                                            <input type=\"text\" class=\"form-control\" id=\"company\" name=\"company2\"\r\n                                                placeholder=\"Empresa\" value={{delivery.company}}>\r\n                                        </div>\r\n                                        <div class=\"col-md-6 form-group p_star\">\r\n                                            <input type=\"text\" class=\"form-control\" id=\"number\" name=\"number2\"\r\n                                                placeholder=\"TelÃ©fono\" required value={{delivery.number}}>\r\n                                            <span class=\"placeholder\" data-placeholder=\"Phone number\"></span>\r\n                                        </div>\r\n                                        <div class=\"col-md-6 form-group p_star\">\r\n                                            <input type=\"text\" class=\"form-control\" id=\"email\" name=\"email2\"\r\n                                                placeholder=\"Correo electrÃ³nico\" required value={{delivery.email}}>\r\n                                            <span class=\"placeholder\" data-placeholder=\"Email Address\"></span>\r\n                                        </div>\r\n                                        <div class=\"col-md-12 form-group p_star\">\r\n                                            <input type=\"text\" class=\"form-control\" id=\"add1\" name=\"street2\"\r\n                                                placeholder=\"Calle\" required value=\"{{delivery.street}}\">\r\n                                            <span class=\"placeholder\" data-placeholder=\"Address line 01\"></span>\r\n                                        </div>\r\n                                        <div class=\"col-md-6 form-group p_star\">\r\n                                            <input type=\"text\" class=\"form-control\" id=\"add2\" name=\"floor2\"\r\n                                                placeholder=\"Piso\" required value={{delivery.floor}}>\r\n                                            <span class=\"placeholder\" data-placeholder=\"Address line 02\"></span>\r\n                                        </div>\r\n                                        <div class=\"col-md-6 form-group p_star\">\r\n                                            <input type=\"text\" class=\"form-control\" id=\"city\" name=\"city2\"\r\n                                                placeholder=\"Ciudad\" required value={{delivery.city}}>\r\n                                            <span class=\"placeholder\" data-placeholder=\"Town/City\"></span>\r\n                                        </div>\r\n                                        <div class=\"col-md-6 form-group p_star\">\r\n                                            <input type=\"text\" class=\"form-control\" id=\"country\" name=\"country2\"\r\n                                                placeholder=\"PaÃ­s\" required value={{delivery.country}}>\r\n                                            <span class=\"placeholder\" data-placeholder=\"Country\"></span>\r\n                                        </div>\r\n                                        <div class=\"col-md-6 form-group\">\r\n                                            <input type=\"text\" class=\"form-control\" id=\"zip\" name=\"zipcode2\"\r\n                                                placeholder=\"CÃ³digo postal\" required value={{delivery.zipcode}}>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <textarea class=\"form-control\" name=\"message\" id=\"message\" rows=\"1\"\r\n                                    placeholder=\"Notas\"></textarea>\r\n                            </div>-->\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-lg-4\">\r\n                    <div class=\"order_box\">\r\n                        <!--order-->\r\n                        <h2>Tu pedido</h2>\r\n                        <ul class=\"list\">\r\n                            <li><a>\r\n                                    <h4>Productos <span>Total</span></h4>\r\n                                </a></li>\r\n                            <div *ngFor=\"let productAmount of order.productList\">\r\n                                <li>\r\n                                    <a class=\"a\">{{productAmount.product.name}}</a><span\r\n                                        class=\"middle\">{{productAmount.product.price}} x\r\n                                        {{productAmount.amount}}</span>\r\n                                    <!--href=\"/product/{{product.id}}\"-->\r\n                                    <span class=\"last\" style=\"float:right;\">{{productAmount.total}}€</span>\r\n                                </li>\r\n                            </div>\r\n                            <!--end ngFor-->\r\n                        </ul><br>\r\n                        <ul class=\"list list_2\">\r\n                            <form>\r\n                                <input type=\"hidden\" id=\"tax\" name=\"tax\" value=2.90>\r\n                                <li><a>Subtotal <span>{{order.total}}€</span></a></li>\r\n                                <!--<input type=\"hidden\" id=\"totalCheck\" name=\"totalCheck\" value={{total}}>-->\r\n                                <li><a>Precio envío <span>2.90€</span></a></li>\r\n                                <input type=\"hidden\" id=\"tax\" name=\"tax\" value=2.90>\r\n                                <li><a>Total <span id=\"sum\">{{totalaux}}€</span></a></li>\r\n                            </form>\r\n                        </ul>\r\n                        <!--order-->\r\n                        <div class=\"payment_item\">\r\n                            <div class=\"radion_btn\">\r\n                                <input type=\"radio\" id=\"f-option5\" name=\"selector\">\r\n                                <label for=\"f-option5\">Contrarreembolso</label>\r\n                                <div class=\"check\"></div>\r\n                            </div>\r\n                            <p>Este método de pago conlleva un recargo adicional de 2.90€.</p>\r\n                        </div>\r\n                        <div class=\"creat_account\">\r\n                            <input type=\"checkbox\" id=\"f-option4\" name=\"selector\" required>\r\n                            <label for=\"f-option4\">He leí­do y acepto</label>\r\n                            <a href=\"https://themes.getbootstrap.com/terms/\">los términos y condiciones*</a>\r\n                        </div>\r\n                        <div class=\"text-center\">\r\n                            <button class=\"button button-paypal\" type=\"submit\"\r\n                                (click)=\"finish(user.delivery.shippingname, user.delivery.lastname,user.delivery.company, user.delivery.number,user.delivery.email, user.delivery.street,user.delivery.floor, user.delivery.city,user.delivery.country,user.delivery.zipcode)\"\r\n                                [routerLink]=\"['/confirmation']\">Proceder al pago</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n<!--================End Checkout Area =================-->","import { Component, OnInit } from '@angular/core';\r\nimport { Order } from './order.model';\r\nimport { Router } from '@angular/router';\r\nimport { OrderService } from './order.service';\r\nimport { LoginService, User } from '../auth/login.service';\r\n//import { Metric } from './metric.model';\r\n\r\n@Component({\r\n  selector: 'app-confirmation',\r\n  templateUrl: './confirmation.component.html'\r\n})\r\nexport class ConfirmationComponent implements OnInit {\r\n\r\n  order: Order;\r\n  user: User;\r\n  tax: number = 2.90;\r\n  totalaux: number;\r\n  userAux: User;\r\n  orderAux: Order;\r\n  /*metric: Metric = { average: null, averageToPrint: 0, \r\n    lastMoney:0, toPrint: 0, totalMoney: 0, totalOrders: 0};*/\r\n\r\n  constructor(private router: Router, private orderService: OrderService, public loginService: LoginService) { \r\n    this.order = {status: '', productList: [], total: 0, day: 0, month: 0, year: 0}\r\n    this.orderAux = {status: '', productList: [], total: 0, day: 0, month: 0, year: 0}\r\n    this.totalaux = 0;\r\n  }  \r\n\r\n  ngOnInit() {\r\n    if(!this.loginService.isLogged)\r\n          this.router.navigate(['/login'])\r\n    this.loginService.getUserById(this.loginService.user.id).subscribe(\r\n      user => this.user = user,\r\n      error => console.log(error)\r\n    );\r\n    this.loginService.getUserById(this.loginService.user.id).subscribe(\r\n      user => {this.user = user;\r\n                this.order = this.user.orderList[this.user.orderList.length-1];\r\n                this.totalaux = this.order.total + this.tax;\r\n                if(this.order.productList.length==0)\r\n                  this.router.navigate(['/product'])},\r\n                error => console.log(error)\r\n    )\r\n    /*this.orderService.getMetrics().subscribe(\r\n      metric => {\r\n        console.log(metric),\r\n        this.metric = metric,\r\n        console.log(this.metric),\r\n        this.metric.lastMoney = this.order.total,\r\n        this.metric.totalOrders = this.metric.totalOrders + 1;\r\n        this.metric.totalMoney = this.metric.totalMoney + this.order.total,\r\n        this.metric.average = this.metric.totalMoney / this.metric.totalOrders,\r\n        this.metric.averageToPrint = Number(this.metric.average).toFixed(2),\r\n\r\n        this.orderService.updateMetrics(this.metric).subscribe(),\r\n        console.log(this.metric)\r\n      \r\n      },\r\n      error => console.log(error)\r\n    );*/\r\n\r\n  }\r\n\r\n  /*this.loginService.getUserById(this.loginService.user.id).subscribe(\r\n    user => {this.userAux = user;\r\n        if(this.userAux.orderList[0].id > this.userAux.orderList[1].id && this.userAux.orderList.length == 2){\r\n          this.orderAux = this.userAux.orderList[1]\r\n          this.userAux.orderList[1] = this.userAux.orderList[0]\r\n          this.userAux.orderList[0] = this.orderAux\r\n          this.order = this.userAux.orderList[this.userAux.orderList.length-2];\r\n          this.loginService.saveUser(this.userAux);\r\n        }\r\n    }, error => console.log(error)\r\n  );*/\r\n\r\n}","<meta charset=\"UTF-8\">\r\n  <!--================Order Details Area =================-->\r\n  <section class=\"order_details section-margin--small\">\r\n    <div class=\"container\" *ngIf=\"order.status=='Complete'\">\r\n      <p class=\"text-center billing-alert\">Gracias. Tu pedido ha sido recibido.</p>\r\n      <div class=\"row mb-5\">\r\n        <div class=\"col-md-6 col-xl-4 mb-4 mb-xl-0\">\r\n          <div class=\"confirmation-card\">\r\n            <h3 class=\"billing-title\">Información del pedido</h3>\r\n            <table class=\"order-rable\">\r\n              <tr>\r\n                <td>Número del pedido</td>\r\n                <td>: {{order.id}}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Fecha</td>\r\n                <td>: {{order.day}}/{{order.month}}/{{order.year}}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Total</td>\r\n                <td>: {{totalaux}}€</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Método de pago</td>\r\n                <td>: Efectivo</td>\r\n              </tr>\r\n            </table>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-6 col-xl-4 mb-4 mb-xl-0\">\r\n          <div class=\"confirmation-card\">\r\n            <h3 class=\"billing-title\">Dirección de facturación</h3>\r\n            <table class=\"order-rable\">\r\n              <tr>\r\n                <td>Calle</td>\r\n                <td>: {{user.delivery.street}}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Ciudad</td>\r\n                <td>: {{user.delivery.city}}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>País</td>\r\n                <td>: {{user.delivery.country}}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Código postal</td>\r\n                <td>: {{user.delivery.zipcode}}</td>\r\n              </tr>\r\n            </table>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-6 col-xl-4 mb-4 mb-xl-0\">\r\n          <div class=\"confirmation-card\">\r\n            <h3 class=\"billing-title\">Dirección de envío</h3>\r\n            <table class=\"order-rable\">\r\n              <tr>\r\n                <td>Calle</td>\r\n                <td>: {{user.delivery.street}}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Ciudad</td>\r\n                <td>: {{user.delivery.city}}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>País</td>\r\n                <td>: {{user.delivery.country}}</td>\r\n              </tr>\r\n              <tr>\r\n                <td>Código postal</td>\r\n                <td>: {{user.delivery.zipcode}}</td>\r\n              </tr>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"order_details_table\">\r\n        <h2>Detalles del pedido</h2>\r\n        <div class=\"table-responsive\">\r\n          <table class=\"table\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\">Producto</th>\r\n                <th scope=\"col\">Cantidad</th>\r\n                <th scope=\"col\">Total</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <div *ngFor=\"let productAmount of order.productList\">\r\n              <tr>\r\n                <td>\r\n                  <p>{{productAmount.product.name}}</p>\r\n                </td>\r\n                <td>\r\n                  <h5>x {{productAmount.amount}}</h5>\r\n                </td>\r\n                <td>\r\n                  <p>{{productAmount.total}}€</p>\r\n                </td>\r\n              </tr>\r\n            </div>\r\n              <tr>\r\n                <td>\r\n                  <h4>Subtotal</h4>\r\n                </td>\r\n                <td>\r\n                  <h5></h5>\r\n                </td>\r\n                <td>\r\n                  <input type=\"hidden\" id=\"totalCheck\" name=\"totalCheck\" ><!--value={{total}}-->\r\n                  <p>{{order.total}}€</p>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <h4>Envío</h4>\r\n                </td>\r\n                <td>\r\n                  <h5></h5>\r\n                </td>\r\n                <td>\r\n                  <input type=\"hidden\" id=\"tax\" name=\"tax\" value=2.90>\r\n                  <p>2.90€</p>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <h4>Total</h4>\r\n                </td>\r\n                <td>\r\n                  <h5></h5>\r\n                </td>\r\n                <td>\r\n                  <h4 id=\"sum\"></h4>\r\n                  <p>{{totalaux}}</p>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </section>\r\n  <!--================End Order Details Area =================-->","import { Component, OnInit } from '@angular/core';\r\nimport { Order } from './order.model';\r\nimport { Router } from '@angular/router';\r\nimport { OrderService } from './order.service';\r\nimport { LoginService, User } from '../auth/login.service';\r\nimport { Product } from '../product/product.model';\r\nimport { ProductAmount } from '../product/productamount.model';\r\n\r\n@Component({\r\n  selector: 'app-order',\r\n  templateUrl: './order.component.html',\r\n  styleUrls: ['./order.component.css']\r\n})\r\nexport class OrderComponent implements OnInit {\r\n\r\n  order: Order;\r\n  userAux: User;\r\n  orderAux: Order;\r\n\r\n  constructor(private router: Router, private service: OrderService, public loginService: LoginService) { \r\n    this.order = {status: '', productList: [], total: 0, day: 0, month: 0, year: 0}\r\n  }\r\n\r\n  ngOnInit() {\r\n    if(this.loginService.isLogged)\r\n    this.loginService.getUserById(this.loginService.user.id).subscribe(\r\n      user => {this.userAux = user;\r\n          if(this.userAux.orderList[0].id > this.userAux.orderList[1].id && this.userAux.orderList.length == 2){\r\n            /*this.orderAux = this.userAux.orderList[1]\r\n            this.userAux.orderList[1] = this.userAux.orderList[0]\r\n            this.userAux.orderList[0] = this.orderAux\r\n            this.order = this.userAux.orderList[this.userAux.orderList.length-2];*/\r\n            this.loginService.saveUser(this.userAux).subscribe(\r\n              user => this.userAux = user\r\n              ,error => console.log(error));\r\n          }\r\n      }, error => console.log(error)\r\n    );\r\n    this.service.getCurrentOrder().subscribe(\r\n      order => this.order = order,\r\n      error => console.log(error)\r\n    );\r\n  }\r\n\r\n  delete(id:number){\r\n    this.service.deleteProductFromOrder(this.order.id, id).subscribe(\r\n      order => this.order = order,\r\n      error => console.log(error)\r\n    );\r\n  }\r\n\r\n  reloadAmount(id:number,productAux: Product, qt: number){\r\n    const productAmount = { id:id,product: productAux, amount: qt, order: this.order};\r\n    this.service.editOrder(productAmount, this.order.id ).subscribe(\r\n      order => { this.order = order;\r\n                 this.router.navigate(['/order']);\r\n      }, error => console.log(error));\r\n  }\r\n\r\n}","<meta charset=\"UTF-8\">\r\n<!-- ================ start banner area ================= -->\r\n<section class=\"blog-banner-area\" id=\"category\">\r\n    <img src=\"/assets/banner/onepiece.png\" style=\"float:left;width:100%;height:100%;object-fit:cover;opacity: 0.3;\">\r\n    <div class=\"container h-100\">\r\n        <div class=\"blog-banner\">\r\n            <div class=\"text-center\">\r\n                <h1>Cesta</h1>\r\n                <nav aria-label=\"breadcrumb\" class=\"banner-breadcrumb\">\r\n                    <ol class=\"breadcrumb\">\r\n                        <li class=\"breadcrumb-item\"><a href=\"#\">Inicio</a></li>\r\n                        <li class=\"breadcrumb-item active\" aria-current=\"page\">Cesta</li>\r\n                    </ol>\r\n                </nav>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n<!-- ================ end banner area ================= -->\r\n\r\n<!--================Cart Area ================= -->\r\n<section class=\"cart_area\">\r\n    <div class=\"container\">\r\n        <div class=\"cart_inner\">\r\n            <div class=\"table-responsive\">\r\n                <table class=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">Producto</th>\r\n                            <th scope=\"col\">Precio</th>\r\n                            <th scope=\"col\">Cantidad</th>\r\n                            <th scope=\"col\">Total</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <div *ngIf=\"order.productList.length > 0\">\r\n                        <div *ngFor=\"let productAmount of order.productList\">\r\n                            <td id=\"product\">\r\n                                <div class=\"media\">\r\n                                    <div class=\"d-flex\">\r\n                                        <img src=\"/assets/{{productAmount.product.image}}\" alt=\"\"\r\n                                            style=\"width:50%; height:50% ;\">\r\n                                    </div>\r\n                                    <div class=\"media-body\">\r\n                                        <p><a [routerLink]=\"['/singleProduct', productAmount.product.id]\"\r\n                                                style=\"color:black;\">{{productAmount.product.name}} -\r\n                                                {{productAmount.product.franchise}}</a></p>\r\n                                    </div>\r\n                                </div>\r\n                            </td>\r\n                            <td>\r\n                                <h5>{{productAmount.product.price}}€</h5>\r\n                                <!-- <input type=\"hidden\" id=\"price-product{{id}}\" name=\"price-product{{id}}\"\r\n                                    value={{product.price}}>-->\r\n                            </td>\r\n                            <td>\r\n                                <div class=\"common-filter\">\r\n                                    <div class=\"filter-list w-50\">\r\n                                        <input matInput class=\"form-control\" type=\"number\" [(ngModel)]=\"productAmount.amount\">\r\n                                    </div>\r\n                                </div>\r\n                                <button mat-icon-button (click)=\"reloadAmount(productAmount.id,productAmount.product,productAmount.amount)\"><mat-icon>refresh</mat-icon>\r\n                                    </button>\r\n                                    \r\n                                <!--<div class=\"product_count\">\r\n                                <form id=\"update-product{{id}}\" action=\"/updateProduct/{{id}}\" method=\"POST\">\r\n                                  <input type=\"text\" name=\"qty\" id=\"sstupdate{{id}}\" maxlength=\"12\" value=\"{{amount}}\" title=\"Quantity:\"\r\n                                  class=\"input-text qty\">\r\n                                  <input type=\"hidden\" name=\"_csrf\" value=\"{{token}}\" />\r\n                              </form>\r\n                              <button id=\"update{{id}}\" onclick=\"var result = document.getElementById('sst'); var sst = result.value; if( !isNaN( sst )) result.value++;return false;\"\r\n                                  class=\"increase items-count\" type=\"button\"><i class=\"lnr lnr-chevron-up\"></i></button>\r\n                              <button onclick=\"var result = document.getElementById('sst'); var sst = result.value; if( !isNaN( sst ) & sst > 0 ) result.value--;return false;\"\r\n                                  class=\"reduced items-count\" type=\"button\"><i class=\"lnr lnr-chevron-down\"></i></button>\r\n                                \r\n                                <button class=\"fa fa-refresh\" type=\"submit\" form=\"update-product{{id}}\"></button>\r\n                                \r\n                          </div>-->\r\n                            </td>\r\n                            <td>\r\n                                <!--<input type=\"hidden\" id=\"finalTotal\" class=\"sum_item\" value={{total}}>-->\r\n                                <h5 id=\"result\">{{productAmount.total}}€</h5>\r\n                            </td>\r\n                            <td>\r\n                                <button class=\"product-remove remove-blog-entrie\" id=\"\"\r\n                                    type=\"submit\" (click)=\"delete(productAmount.id)\">Eliminar</button>\r\n                            </td>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <tr>\r\n                        <td>\r\n                            <a class=\"button\" [routerLink]=\"['/order']\">Actualizar cesta</a>\r\n                        </td>\r\n                        <td>\r\n\r\n                        </td>\r\n                        <td>\r\n                            <h5>Total: </h5>\r\n                        </td>\r\n                        <td>\r\n                            {{order.total}}\r\n                            <!--<h5 id=\"total\" class=\"total\"></h5>-->\r\n                        </td>\r\n                    </tr>\r\n\r\n                    <tr class=\"out_button_area\">\r\n                        <td class=\"d-none-l\">\r\n\r\n                        </td>\r\n                        <td>\r\n\r\n                        </td>\r\n                        <td>\r\n\r\n                        </td>\r\n\r\n                        <td>\r\n                            <div class=\"checkout_btn_inner d-flex align-items-center\">\r\n\r\n                                <a id=\"empty-cart\" class=\"gray_btn\" [routerLink]=\"['/product']\">Seguir comprando </a>\r\n\r\n                            </div>\r\n                            <div *ngIf=\"order.productList.length > 0\">\r\n                                <a id=\"not-empty-cart\" class=\"primary-btn finish-btn\"\r\n                                    [routerLink]=\"['/checkout']\">Finalizar</a>\r\n                            </div>\r\n                        </td>\r\n                    </tr>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n<!-- ================End Cart Area =================-->","import { Injectable } from '@angular/core';\r\nimport { LoginService, User } from '../auth/login.service';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Order } from './order.model';\r\nimport { Observable } from 'rxjs';\r\nimport { map, catchError } from 'rxjs/operators';\r\nimport { ProductAmount } from '../product/productamount.model';\r\nimport { Address } from '../auth/address.model';\r\nimport { Metric } from './metric.model';\r\n\r\nconst URL = '/api/order/';\r\nconst URLmetrics = '/api/metrics/';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class OrderService {\r\n\r\n  httpOptions = {\r\n    headers: new HttpHeaders({ 'Content-Type': 'application/json'})\r\n  }\r\n\r\n  constructor(private loginService: LoginService, private http: HttpClient) { }\r\n\r\n  getOrders(): Observable<Order[]> {\r\n    return this.http.get<any>(URL, {withCredentials: true})\r\n      .pipe(\r\n        map(result => result.content),\r\n        catchError((error) => this.handleError(error)));\r\n  }\r\n  \r\n  getAllOrders(): Observable<Order[]>{\r\n    console.log(\"pidiendo todos los datos\");\r\n    return this.http.get<Order[]>(URL,{withCredentials:true})\r\n        .pipe(catchError((error)=>this.handleError(error)));\r\n  }\r\n\r\n  getOrderById(id: number| string): Observable<Order> {\r\n    return this.http.get<Order>(URL + id, {withCredentials: true})\r\n    .pipe(catchError((error) => this.handleError(error)));\r\n  }\r\n\r\n  getMetrics(): Observable<Metric> {\r\n    return this.http.get<Metric>(URLmetrics, {withCredentials: true})\r\n    .pipe(catchError((error) => this.handleError(error)));\r\n  }\r\n\r\n  getAllMetrics(): Observable<Metric[]> {\r\n    return this.http.get<Metric[]>(URLmetrics + \"all\", {withCredentials: true})\r\n    .pipe(catchError((error) => this.handleError(error)));\r\n  }\r\n\r\n  /*updateMetrics(metric: Metric): Observable<Metric> {\r\n    const body = JSON.stringify(metric);\r\n    const headers = new HttpHeaders({'Content-Type': 'application/json'});\r\n    return this.http.post<Metric>(URL, body, {headers}).pipe(catchError((error) => this.handleError(error)));\r\n  }*/\r\n\r\n  saveOrder(order: Order): Observable<Order> {\r\n    const body = JSON.stringify(order);\r\n    const headers = new HttpHeaders({'Content-Type': 'application/json'});\r\n    console.log(order);\r\n\r\n    if (!order.id) {\r\n        return this.http.post<Order>(URL, body, {headers}).pipe(catchError((error) => this.handleError(error)));\r\n    } else {\r\n        return this.http.put<Order>(URL + order.id, body, {headers}).pipe(catchError((error) => this.handleError(error)));\r\n    }  \r\n  }\r\n\r\n  deleteOrder(order : Order): Observable<Order> {\r\n    return this.http.delete<Order>(URL + order.id).pipe(catchError((error) => this.handleError(error)));\r\n  }\r\n\r\n  private handleError(error: any) {\r\n    console.error(error);\r\n    return Observable.throw('Server error (' + error.status + ' ): ' + error);\r\n  }\r\n\r\n  getCurrentOrder(): Observable<Order> {  \r\n    let orderid = 0;\r\n    if(this.loginService.isLogged)\r\n      orderid = this.loginService.user.id\r\n    else\r\n      orderid = 0\r\n    return this.http.get<Order>(URL + orderid, this.httpOptions)\r\n    .pipe(catchError((error) => this.handleError(error)));\r\n  }\r\n\r\n  addProduct(pAmount: ProductAmount, id: number): Observable<Order>{\r\n    const body = JSON.stringify(pAmount);\r\n    const headers = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n  });\r\n    return this.http.post<Order>(URL + id, body, {headers}).pipe(catchError((error) => this.handleError(error))) as Observable<Order>;\r\n  }\r\n\r\n  finishOrder(address: Address[], id:number): Observable<Order>{\r\n    const body = JSON.stringify(address);\r\n    const headers = new HttpHeaders({\r\n      'Content-Type':  'application/json'\r\n    })\r\n    return this.http.put<any>(URL + id + \"/confirmation\", body, {headers}).pipe(catchError((error) => this.handleError(error))) as Observable<Order>;\r\n  }\r\n\r\n  deleteProductFromOrder(orderId : number, pId: number): Observable<Order> {\r\n    return this.http.delete<any>(URL + orderId + \"/\" + pId).pipe(catchError((error) => this.handleError(error))) as Observable<Order>;\r\n  }\r\n\r\n  editOrder(pAmount: ProductAmount,id:number): Observable<Order>{\r\n    const body = JSON.stringify(pAmount);\r\n    const headers = new HttpHeaders({\r\n      'Content-Type':  'application/json'\r\n    })\r\n    return this.http.put<any>(URL + id, body, {headers}).pipe(catchError((error) => this.handleError(error))) as Observable<Order>;\r\n  }\r\n\r\n}","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { ProductService} from './product.service';\r\nimport { OrderService } from '../order/order.service';\r\nimport { Product} from './product.model';\r\nimport { ProductAmount} from './productamount.model';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\nimport { LoginService } from '../auth/login.service';\r\nimport { Order } from '../order/order.model';\r\nimport {NgbModal} from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-product',\r\n  templateUrl: './product.component.html',\r\n  styleUrls: ['./product.component.css']\r\n})\r\n\r\nexport class ProductComponent implements OnInit {\r\n\r\n  product: Product;\r\n  products: Product[];\r\n  franchises: string[] = [];\r\n  distributors: string[] = [];\r\n  value = 100;\r\n  min = 0;\r\n  max = 3000;\r\n  autoTicks = false;\r\n  showTicks = false;\r\n  tickInterval = 1;\r\n  franchise = '';\r\n  distributor = '';\r\n  height = 150;\r\n  width = 150;\r\n  recommendedProducts: Product[];\r\n  pAmount: ProductAmount;\r\n  order: Order;\r\n  closeResult = '';\r\n  newProduct: Product;\r\n  mySubscription: any;\r\n  page: number = 1;\r\n  productsAux: Product[] = [];\r\n  lastpage: boolean= false;\r\n  filterqty: number = 99;\r\n  sorting: boolean = false;\r\n  sortingMethod: boolean = false;\r\n  searching: boolean = false;\r\n  searchkey: string = \"\";\r\n\r\n  constructor(private router: Router, private service: ProductService, public loginService: LoginService, private orderService: OrderService, private modalService: NgbModal) {\r\n    this.page=1;\r\n    this.order = {status: '', productList: [], total: 0, day: 0, month: 0, year: 0};\r\n    this.newProduct = { name: '', franchise: '', distributor: '', price: 0, description: '',\r\n                        height: 0, width: 0, weight: 0, reference: '', stock: 0, image: '/img/product/notavailable.png', imagefull: '/img/product/notavailable2.png' };\r\n    this.router.routeReuseStrategy.shouldReuseRoute = function () {\r\n        return false;\r\n    };\r\n    this.mySubscription = this.router.events.subscribe((event) => {\r\n      if (event instanceof NavigationEnd) {\r\n        // Trick the Router into believing it's last link wasn't previously loaded\r\n        this.router.navigated = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.service.getAllProducts().subscribe(\r\n      products => this.products = products,\r\n      error => console.log(error)\r\n    );\r\n    this.service.getAllProducts().subscribe(\r\n      products => this.getFranchisesAndDistributors(products),\r\n      error => console.log(error)\r\n    );\r\n    this.service.getProductsbyPage(1).subscribe(\r\n      products => this.getFranchisesAndDistributors(products),\r\n      error => console.log(error)\r\n    );\r\n    this.service.getProductsbyRecommendations().subscribe(\r\n      recommendedProducts => this.recommendedProducts = recommendedProducts,\r\n      error => console.log(error)\r\n    );\r\n    this.orderService.getCurrentOrder().subscribe(\r\n      order => this.order = order,\r\n      error => console.log(error)\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.mySubscription) {\r\n      this.mySubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  formatLabel(value: number) {\r\n    if (value >= 0) {\r\n      return Math.round(value / 1) + '€';\r\n    }\r\n    return value;\r\n  }\r\n\r\n  getSliderTickInterval(): number | 'auto' {\r\n    if (this.showTicks) {\r\n      return this.autoTicks ? 'auto' : this.tickInterval;\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  sortBy(toDo: string, sort: string) {\r\n    this.lastpage = false;\r\n    this.page = 1;\r\n    this.sorting = true;\r\n    this.searching = false;\r\n    if(sort==\"asc\")\r\n      this.sortingMethod = true\r\n    else\r\n    this.sortingMethod = false\r\n    if(toDo==\"\")\r\n      this.service.getAllProducts().subscribe(\r\n        products => {this.products = products;\r\n                     this.sorting = false;\r\n                     this.filterqty = 99;},\r\n        error => console.log(error)\r\n      );\r\n    else\r\n    this.service.getProductsbySort(toDo, sort, 0).subscribe(\r\n      products => {this.products = products\r\n                   this.filterqty = 99;},\r\n      error => console.log(error)\r\n    );\r\n  }\r\n\r\n  search(key: string) {\r\n    this.lastpage = false;\r\n    this.searching = true;\r\n    this.searchkey = key;\r\n    this.service.getProductsbyKey('search', key, 0).subscribe(\r\n      products => {this.products = products;\r\n                   this.filterqty = 99;\r\n                   this.service.getProductsbyKey('search', key, this.page).subscribe(\r\n                    products => {this.productsAux = products;\r\n                                 if(this.productsAux.length==0)\r\n                                  this.lastpage = true},\r\n                  error => console.log(error));},\r\n      error => console.log(error)\r\n    );\r\n  }\r\n\r\n  delete(product: Product) {\r\n    this.service.deleteProduct(product).subscribe(\r\n      products => this.products = products,\r\n      error => console.log(error)\r\n    );\r\n  }\r\n\r\n  saveProduct() {\r\n    this.service.saveProduct(this.newProduct).subscribe(\r\n    product => { this.service.getProductsbyPage(this.page).subscribe(\r\n                    products => {this.getFranchisesAndDistributors(products)},\r\n                    error => console.log(error)\r\n                  );  \r\n    }, (error: Error) => console.error('error creating new product: ' + error));\r\n  }\r\n\r\n  filter() {\r\n    this.service.getProductsbyFilter(this.franchise, this.distributor, this.width, this.height, this.min, this.value).subscribe(\r\n      products => {this.products = products\r\n                    this.filterqty = products.length},\r\n      error => console.log(error)\r\n    );\r\n  }\r\n\r\n  getFranchisesAndDistributors(products: Product[]) {\r\n    const franchisesaux: string[] = [];\r\n    const distributorsaux: string[] = [];\r\n    for (let i = 0; i < products.length; i++) {\r\n      if (!franchisesaux.includes(products[i].franchise) && !this.franchises.includes(products[i].franchise)) {\r\n        franchisesaux.push(products[i].franchise);\r\n      }\r\n      if (!distributorsaux.includes(products[i].distributor) && !this.distributors.includes(products[i].distributor)) {\r\n        distributorsaux.push(products[i].distributor);\r\n      }\r\n    }\r\n    this.franchises = this.franchises.concat(franchisesaux);\r\n    this.distributors = this.distributors.concat(distributorsaux);\r\n  }\r\n\r\n  addProductToOrder(productAux: Product, qt: number) {\r\n    const productAmount = { product: productAux, amount: qt };\r\n    this.pAmount = productAmount;\r\n    this.orderService.addProduct(this.pAmount, this.order.id ).subscribe(\r\n      order => { this.order = order;\r\n                 this.router.navigate(['/order']);\r\n      }, error => console.log(error));\r\n  }\r\n\r\n  openVerticallyCentered(content) {\r\n    this.modalService.open(content, { centered: true, size: 'lg' });\r\n  }\r\n\r\n  loadMore(){\r\n    this.service.getProductsbyPage(this.page).subscribe(\r\n      products => {if(this.sorting == true){\r\n                    if(this.sortingMethod == false){\r\n                      this.service.getProductsbySort(\"sort\", \"desc\", this.page).subscribe(\r\n                        products => this.products = this.products.concat(products),\r\n                        error => console.log(error)\r\n                      );\r\n                    }   \r\n                    else{\r\n                      this.service.getProductsbySort(\"sort\", \"asc\", this.page).subscribe(\r\n                        products => this.products = this.products.concat(products),\r\n                        error => console.log(error)\r\n                      );\r\n                    }\r\n                    this.page+=1\r\n                    this.service.getProductsbyPage(this.page).subscribe(\r\n                      products => {this.productsAux = products;\r\n                                   if(this.productsAux.length==0)\r\n                                    this.lastpage = true},\r\n                    error => console.log(error));\r\n                  }\r\n\r\n                  else if(this.searching){\r\n                    this.service.getProductsbyKey('search', this.searchkey, this.page).subscribe(\r\n                      products => {this.products = this.products.concat(products);\r\n                                   this.filterqty = products.length;},\r\n                      error => console.log(error)\r\n                    );\r\n                  }\r\n\r\n                  else{\r\n\r\n                   this.productsAux = products\r\n                   if(this.productsAux.length!=0){\r\n                      this.products = this.products.concat(this.productsAux)\r\n                      this.page+=1;\r\n                      this.service.getProductsbyPage(this.page).subscribe(\r\n                        products => {this.productsAux = products;\r\n                                     if(this.productsAux.length==0)\r\n                                      this.lastpage = true\r\n                                    else\r\n                                      this.service.getProductsbyPage(this.page).subscribe(\r\n                                        products => this.getFranchisesAndDistributors(products),\r\n                                        error => console.log(error)\r\n                                      );\r\n                                     },\r\n                      error => console.log(error));\r\n                   }\r\n                   else{\r\n                      this.lastpage = true\r\n                   }}},\r\n      error => console.log(error)\r\n    );\r\n  }\r\n\r\n}\r\n\r\n","<!-- ================ start banner area ================= -->\r\n<mat-card class=\"blog-banner-area\" id=\"category\">\r\n\t<img src=\"/assets/banner/akatsuki.png\"\r\n\t\tstyle=\"float: left; width: 100%; height: 100%; object-fit: cover; opacity: 0.3;\">\r\n\t<div class=\"container h-100\">\r\n\t\t<div class=\"blog-banner\">\r\n\t\t\t<div class=\"text-center\">\r\n\t\t\t\t<h1>Comprar por categor&iacute;as</h1>\r\n\t\t\t\t<nav aria-label=\"breadcrumb\" class=\"banner-breadcrumb\">\r\n\t\t\t\t\t<ol class=\"breadcrumb\">\r\n\t\t\t\t\t\t<li class=\"breadcrumb-item\"><a>Inicio</a></li>\r\n\t\t\t\t\t\t<li class=\"breadcrumb-item active\" aria-current=\"page\">Comprar\r\n\t\t\t\t\t\t\tpor categor&iacute;as</li>\r\n\t\t\t\t\t</ol>\r\n\t\t\t\t</nav>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</mat-card>\r\n<!-- ================ end banner area ================= -->\r\n\r\n<!-- ================ category section start ================= -->\r\n<mat-card class=\"section-margin--small mb-5\">\r\n\t<div class=\"container\">\r\n\t\t<div class=\"row\">\r\n\t\t\t<div class=\"col-xl-3 col-lg-4 col-md-5\">\r\n\t\t\t\t<div class=\"sidebar-categories\">\r\n\t\t\t\t\t<div class=\"head\">Explorar categor&iacute;as</div>\r\n\t\t\t\t\t<ul class=\"main-categories\">\r\n\t\t\t\t\t\t<mat-radio-group class=\"example-radio-group\" [(ngModel)]=\"franchise\">\r\n\t\t\t\t\t\t\t<mat-radio-button class=\"example-radio-button\" color=\"primary\" value=\"Cualquiera\">\r\n\t\t\t\t\t\t\t\tCualquiera\r\n\t\t\t\t\t\t\t</mat-radio-button>\r\n\t\t\t\t\t\t\t<mat-radio-button class=\"example-radio-button\" color=\"primary\" *ngFor=\"let franchise of franchises\" [value]=\"franchise\">\r\n\t\t\t\t\t\t\t\t{{franchise}}\r\n\t\t\t\t\t\t\t</mat-radio-button>\r\n\t\t\t\t\t\t</mat-radio-group>\r\n\t\t\t\t\t\t<!--<mat-radio-group class=\"example-radio-group\" [(ngModel)]=\"franchise\">\r\n\t\t\t\t\t\t\t<mat-radio-button class=\"example-radio-button\" color=\"primary\" value=\"Cualquiera\">\r\n\t\t\t\t\t\t\t\tCualquiera\r\n\t\t\t\t\t\t\t</mat-radio-button>\r\n\t\t\t\t\t\t\t<mat-radio-button class=\"example-radio-button\" color=\"primary\" value=\"One Piece\">\r\n\t\t\t\t\t\t\t\tOne Piece\r\n\t\t\t\t\t\t\t</mat-radio-button>\r\n\t\t\t\t\t\t\t<mat-radio-button class=\"example-radio-button\" color=\"primary\" value=\"Attack on Titans\">\r\n\t\t\t\t\t\t\t\tAttack on Titans\r\n\t\t\t\t\t\t\t</mat-radio-button>\r\n\t\t\t\t\t\t\t<mat-radio-button class=\"example-radio-button\" color=\"primary\" value=\"Naruto\">\r\n\t\t\t\t\t\t\t\tNaruto\r\n\t\t\t\t\t\t\t</mat-radio-button>\r\n\t\t\t\t\t\t\t<mat-radio-button class=\"example-radio-button\" color=\"primary\" value=\"Predator\">\r\n\t\t\t\t\t\t\t\tPredator\r\n\t\t\t\t\t\t\t</mat-radio-button>\r\n\t\t\t\t\t\t</mat-radio-group>-->\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"sidebar-filter\">\r\n\t\t\t\t\t<div class=\"top-filter-head\">Filtros de productos</div>\r\n\t\t\t\t\t<div class=\"common-filter\">\r\n\t\t\t\t\t\t<div class=\"head\">Distribuidores</div>\r\n\t\t\t\t\t\t<ul class=\"filter-pad\">\r\n\t\t\t\t\t\t\t<mat-radio-group class=\"example-radio-group\" [(ngModel)]=\"distributor\">\r\n\t\t\t\t\t\t\t\t<mat-radio-button class=\"example-radio-button\" color=\"primary\" value=\"Cualquiera\">\r\n\t\t\t\t\t\t\t\t\tCualquiera\r\n\t\t\t\t\t\t\t\t</mat-radio-button>\r\n\t\t\t\t\t\t\t\t<mat-radio-button class=\"example-radio-button\" color=\"primary\" *ngFor=\"let distributor of distributors\" [value]=\"distributor\">\r\n\t\t\t\t\t\t\t\t\t{{distributor}}\r\n\t\t\t\t\t\t\t\t</mat-radio-button>\r\n\t\t\t\t\t\t\t</mat-radio-group>\r\n\t\t\t\t\t\t\t<!--<mat-radio-group class=\"example-radio-group\" [(ngModel)]=\"distributor\">\r\n\t\t\t\t\t\t\t\t<mat-radio-button class=\"example-radio-button\" color=\"primary\" value=\"Cualquiera\">\r\n\t\t\t\t\t\t\t\t\tCualquiera\r\n\t\t\t\t\t\t\t\t</mat-radio-button>\r\n\t\t\t\t\t\t\t\t<mat-radio-button class=\"example-radio-button\" color=\"primary\" value=\"Figuarts ZERO\">\r\n\t\t\t\t\t\t\t\t\tFiguarts ZERO\r\n\t\t\t\t\t\t\t\t</mat-radio-button>\r\n\t\t\t\t\t\t\t\t<mat-radio-button class=\"example-radio-button\" color=\"primary\" value=\"Banpresto\">\r\n\t\t\t\t\t\t\t\t\tBanpresto\r\n\t\t\t\t\t\t\t\t</mat-radio-button>\r\n\t\t\t\t\t\t\t\t<mat-radio-button class=\"example-radio-button\" color=\"primary\" value=\"Funko Pop!\">\r\n\t\t\t\t\t\t\t\t\tFunko Pop!\r\n\t\t\t\t\t\t\t\t</mat-radio-button>\r\n\t\t\t\t\t\t\t\t<mat-radio-button class=\"example-radio-button\" color=\"primary\" value=\"Tsume\">\r\n\t\t\t\t\t\t\t\t\tTsume\r\n\t\t\t\t\t\t\t\t</mat-radio-button>\r\n\t\t\t\t\t\t\t</mat-radio-group>-->\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"common-filter\">\r\n\t\t\t\t\t\t<div class=\"head\">Tama&ntilde;o</div>\r\n\t\t\t\t\t\t<div class=\"filter-list w-50\">Ancho\r\n\t\t\t\t\t\t\t<input matInput class=\"form-control\" type=\"number\" [(ngModel)]=\"height\">\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"filter-list w-50\">Alto\r\n\t\t\t\t\t\t\t<input matInput class=\"form-control\" type=\"number\" [(ngModel)]=\"width\">\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"common-filter\">\r\n\t\t\t\t\t\t<div class=\"head\">Precio</div>\r\n\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t<mat-slider thumbLabel [displayWith]=\"formatLabel\" tickInterval=\"500\" min=\"1\" max=\"3000\"\r\n\t\t\t\t\t\t\t\tcolor=\"primary\" [tickInterval]=\"getSliderTickInterval()\" [(ngModel)]=\"value\">\r\n\t\t\t\t\t\t\t</mat-slider>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t<div class=\"filter-list w-50\">Min<input matInput type=\"number\" class=\"form-control\"\r\n\t\t\t\t\t\t\t\t[(ngModel)]=\"min\" /></div>\r\n\t\t\t\t\t\t<div class=\"filter-list w-50\">Max<input matInput type=\"number\" class=\"form-control\"\r\n\t\t\t\t\t\t\t\t[(ngModel)]=\"value\" /></div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"common-filter\">\r\n\t\t\t\t\t\t<div class=\"head\">Búsqueda</div>\r\n\t\t\t\t\t\t<div class=\"filter-list\"><button mat-button (click)=\"filter()\"\r\n\t\t\t\t\t\t\t\tclass=\"add-product\">Aplicar</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"col-xl-9 col-lg-8 col-md-7\">\r\n\t\t\t\t<!-- Start Filter Bar -->\r\n\t\t\t\t<div class=\"filter-bar d-flex flex-wrap align-items-center\">\r\n\t\t\t\t\t<button mat-flat-button [disableRipple]=\"true\" [matMenuTriggerFor]=\"menu\" class=\"sorting dropdown\">Orden predeterminado\r\n\t\t\t\t\t\t<mat-icon class=\"material-icons md-18 padding-dropdown md-grey\">expand_more</mat-icon>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<mat-menu #menu=\"matMenu\">\r\n\t\t\t\t\t\t<button mat-menu-item [disableRipple]=\"true\" (click)=\"sortBy('','')\">Orden predeterminado</button>\r\n\t\t\t\t\t\t<button mat-menu-item [disableRipple]=\"true\" (click)=\"sortBy('sort','desc')\">Precio mayor a menor</button>\r\n\t\t\t\t\t\t<button mat-menu-item [disableRipple]=\"true\" (click)=\"sortBy('sort','asc')\">Precio menor a mayor</button>\r\n\t\t\t\t\t</mat-menu>\r\n\t\t\t\t\t<div class=\"sorting mr-auto\">\r\n\t\t\t\t\t\t<div *ngIf=\"loginService.isAdmin\">\r\n\t\t\t\t\t\t\t<button mat-button [disableRipple]=\"true\" class=\"add-product\" (click)=\"openVerticallyCentered(content)\">Añadir producto</button>\r\n\t\t\t\t\t\t\t<ng-template #content let-modal>\r\n\t\t\t\t\t\t\t\t<div class=\"modal-header\">\r\n\t\t\t\t\t\t\t\t  <h4 class=\"modal-title\">Nuevo producto</h4>\r\n\t\t\t\t\t\t\t\t  <button type=\"button\" class=\"close\" aria-label=\"Cerrar\" (click)=\"modal.dismiss('Cross click')\">\r\n\t\t\t\t\t\t\t\t\t<span aria-hidden=\"true\">&times;</span>\r\n\t\t\t\t\t\t\t\t  </button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class=\"modal-body\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-row mb-4\">\r\n\t\t\t\t\t\t\t\t\t\t<mat-label class=\"col-form-label\">Nombre:</mat-label>\r\n\t\t\t\t\t\t\t\t\t\t<input matInput type=\"text\" class=\"form-control\" name=\"name\" required [(ngModel)]=\"newProduct.name\">\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col top\">\r\n\t\t\t\t\t\t\t\t\t\t\t<mat-label class=\"col-form-label\">Franquicia:</mat-label>\r\n\t\t\t\t\t\t\t\t\t\t\t<input matInput type=\"text\" class=\"form-control\" name=\"franchise\" required [(ngModel)]=\"newProduct.franchise\">\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col top\">\r\n\t\t\t\t\t\t\t\t\t\t\t<mat-label class=\"col-form-label\">Precio:</mat-label>\r\n\t\t\t\t\t\t\t\t\t\t\t<input matInput type=\"text\" class=\"form-control\" name=\"price\" required [(ngModel)]=\"newProduct.price\">\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col top\">\r\n\t\t\t\t\t\t\t\t\t\t\t<mat-label class=\"col-form-label\">Stock:</mat-label>\r\n\t\t\t\t\t\t\t\t\t\t\t<input matInput type=\"text\" class=\"form-control\" name=\"stock\" required [(ngModel)]=\"newProduct.stock\">\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<label class=\"col-form-label\">Descripción:</label>\r\n\t\t\t\t\t\t\t\t\t\t<textarea matInput class=\"form-control\" name=\"description\" required [(ngModel)]=\"newProduct.description\"></textarea>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-row mb-4\">\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col top\">\r\n\t\t\t\t\t\t\t\t\t\t\t<mat-label class=\"col-form-label\">Anchura:</mat-label>\r\n\t\t\t\t\t\t\t\t\t\t\t<input matInput type=\"number\" class=\"form-control\" name=\"width\" required [(ngModel)]=\"newProduct.width\">\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col top\">\r\n\t\t\t\t\t\t\t\t\t\t\t<mat-label class=\"col-form-label\">Altura:</mat-label>\r\n\t\t\t\t\t\t\t\t\t\t\t<input matInput type=\"number\" class=\"form-control\" name=\"height\" required [(ngModel)]=\"newProduct.height\">\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col top\">\r\n\t\t\t\t\t\t\t\t\t\t\t<mat-label class=\"col-form-label\">Peso:</mat-label>\r\n\t\t\t\t\t\t\t\t\t\t\t<input matInput type=\"number\" class=\"form-control\" name=\"weight\" required [(ngModel)]=\"newProduct.weight\">\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div class=\"form-row mb-4\">\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col\">\r\n\t\t\t\t\t\t\t\t\t\t\t<mat-label class=\"col-form-label\">Distribuidor:</mat-label>\r\n\t\t\t\t\t\t\t\t\t\t\t<input matInput type=\"text\" class=\"form-control\" name=\"distributor\" required [(ngModel)]=\"newProduct.distributor\">\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"col\">\r\n\t\t\t\t\t\t\t\t\t\t\t<mat-label class=\"col-form-label\">Referencia:</mat-label>\r\n\t\t\t\t\t\t\t\t\t\t\t<input matInput type=\"text\" class=\"form-control\" name=\"reference\" required [(ngModel)]=\"newProduct.reference\">\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class=\"modal-footer\">\r\n\t\t\t\t\t\t\t\t\t<button type=\"submit\" class=\"submit-product\" form=\"newProduct\" (click)=\"saveProduct()\" (click)=\"modal.close('Close click')\">Enviar</button>\r\n\t\t\t\t\t\t\t\t  <button type=\"button\" class=\"btn btn-light\" (click)=\"modal.close('Close click')\">Cerrar</button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t  </ng-template>\r\n\t\t\t\t\t\t\t<!--<button class=\"add-product\" data-toggle=\"modal\" data-target=\"#exampleModal\">A&ntilde;adir\r\n\t\t\t\t\t\t\t\t+</button>\r\n\r\n\t\t\t\t\t\t\t<div class=\"modal fade bd-example-modal-lg\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\"\r\n\t\t\t\t\t\t\t\taria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n\t\t\t\t\t\t\t\t<div class=\"modal-dialog modal-dialog-centered modal-lg\" role=\"document\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"modal-content\">\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"modal-header\">\r\n\t\t\t\t\t\t\t\t\t\t\t<h5 class=\"modal-title\" id=\"exampleModalLabel\">Nuevo\r\n\t\t\t\t\t\t\t\t\t\t\t\tproducto</h5>\r\n\t\t\t\t\t\t\t\t\t\t\t<button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span aria-hidden=\"true\">&times;</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"modal-body\">\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<form id=\"newProduct\" action=\"addProduct\" method=\"post\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tenctype=\"multipart/form-data\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<label class=\"col-form-label\">Nombre:</label> <input type=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclass=\"form-control\" name=\"name\" required #nameFormComponent\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t#nameFormControl=\"ngModel\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t[(ngModel)]=\"nameFormComponent.value\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"form-row mb-4\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label class=\"col-form-label\">Franquicia:</label> <input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\" class=\"form-control\" name=\"franchise\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired #franchiseFormComponent\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t#franchiseFormControl=\"ngModel\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[(ngModel)]=\"franchiseFormComponent.value\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label class=\"col-form-label\">Precio:</label> <input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\" class=\"form-control\" name=\"price\" required\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t#priceFormComponent #priceFormControl=\"ngModel\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[(ngModel)]=\"priceFormComponent.value\"><br>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label class=\"col-form-label\">Stock:</label> <input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\" class=\"form-control\" name=\"stock\" required\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t#stockFormComponent #stockFormControl=\"ngModel\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[(ngModel)]=\"stockFormComponent.value\"><br>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<label class=\"col-form-label\">Descripci&oacute;n:</label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<textarea class=\"form-control\" name=\"description\" required\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t#descriptionFormComponent #descriptionFormControl=\"ngModel\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t[(ngModel)]=\"descriptionFormComponent.value\"></textarea>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"form-row mb-4\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label class=\"col-form-label\">Anchura:</label> <input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\" class=\"form-control\" name=\"width\" required\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t#widthFormComponent #widthFormControl=\"ngModel\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[(ngModel)]=\"widthFormComponent.value\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label class=\"col-form-label\">Altura:</label> <input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\" class=\"form-control\" name=\"height\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired #heightFormComponent\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t#heightFormControl=\"ngModel\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[(ngModel)]=\"heightFormComponent.value\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label class=\"col-form-label\">Peso:</label> <input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\" class=\"form-control\" name=\"weight\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired #weightFormComponent\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t#weightFormControl=\"ngModel\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[(ngModel)]=\"weightFormComponent.value\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"form-row mb-4\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label class=\"col-form-label\">Distribuidor:</label> <input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\" class=\"form-control\" name=\"distributor\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired #distributorFormComponent\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t#distributorFormControl=\"ngModel\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[(ngModel)]=\"distributorFormComponent.value\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"col\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label class=\"col-form-label\">Referencia:</label> <input\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\" class=\"form-control\" name=\"reference\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired #referenceFormComponent\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t#referenceFormControl=\"ngModel\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t[(ngModel)]=\"referenceFormComponent.value\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"form-row mb-4\">\r\n\t\t\t\t\t\t\t\t\t            \t<div class=\"col\">\r\n\t\t\t\t\t\t\t\t\t            \t\t<label class=\"col-form-label\">Imagen:</label>\r\n\t\t\t\t\t\t\t\t\t            \t\t<input type=\"file\" name='imageFile' value=\"\" accept=\".jpg, jpeg\">\r\n\t\t\t\t\t\t\t\t\t            \t</div>\r\n\t\t\t\t\t\t\t\t\t            </div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"modal-footer\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"button\" class=\"close-submit-product\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata-dismiss=\"modal\">Cerrar</button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" class=\"submit-product\" form=\"newProduct\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t(click)=\"saveProduct()\">Enviar</button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>-->\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<!--<div class=\"input-group filter-bar-search\">\r\n\t\t\t\t\t\t\t<input matInput #key #keyControl=\"ngModel\" type=\"text\" [(ngModel)]=\"key.value\" placeholder=\"Buscar\"\r\n\t\t\t\t\t\t\t\t(keydown.enter)=\"search(key.value)\">\r\n\t\t\t\t\t\t\t<div class=\"input-group-append\">\r\n\t\t\t\t\t\t\t\t<button mat-flat-button class=\"search search-button\" type=\"button\" (click)=\"search(key.value)\">\r\n\t\t\t\t\t\t\t\t\t<mat-icon class=\"material-icons md-18 padding md-grey search\">search</mat-icon>\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>-->\r\n\t\t\t\t\t\t<div class=\"col\">\r\n\t\t\t\t\t\t\t<input matInput #key #keyControl=\"ngModel\" type=\"text\"  [(ngModel)]=\"key.value\" class=\"new-search form-control\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Buscar\" (keydown.enter)=\"search(key.value)\">\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<!-- End Filter Bar -->\r\n\t\t\t\t<!-- Start Best Seller -->\r\n\t\t\t\t<mat-card class=\"lattest-product-area pb-40 category-list\">\r\n\t\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t\t<div *ngFor=\"let product of products\" class=\"col-md-6 col-lg-4\" id=\"products\">\r\n\t\t\t\t\t\t\t<div class=\"card text-center card-product\">\r\n\t\t\t\t\t\t\t\t<div class=\"card-product__img\">\r\n\t\t\t\t\t\t\t\t\t<img *ngIf=\"product.image\" class=\"card-img\" src=\"assets{{product.image}}\">\r\n\t\t\t\t\t\t\t\t\t<ul class=\"card-product__imgOverlay\">\r\n\t\t\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t\t\t<button mat-icon-button [disableRipple]=\"true\" [routerLink]=\"['/singleProduct', product.id]\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<mat-icon class=\"material-icons md-18 md-light center-single-product\">search</mat-icon>\r\n\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t\t\t<button mat-icon-button [disableRipple]=\"true\" id=\"add\" (click)=\"addProductToOrder(product,1)\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<mat-icon class=\"material-icons md-18 md-light center-single-product\">add_shopping_cart\r\n\t\t\t\t\t\t\t\t\t\t\t\t</mat-icon>\r\n\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"qt\" id=\"qt\" value=1 />\r\n\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t\t<div *ngIf=\"loginService.isAdmin\">\r\n\t\t\t\t\t\t\t\t\t\t<ul class=\"card-product-remove__imgOverlay\">\r\n\t\t\t\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<button mat-icon-button [disableRipple]=\"true\" (click)=\"delete(product)\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<mat-icon class=\"material-icons md-18 md-light center-single-product\">delete_forever\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</mat-icon>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div class=\"card-body\">\r\n\t\t\t\t\t\t\t\t\t<p>{{product.franchise}}</p>\r\n\t\t\t\t\t\t\t\t\t<h4 class=\"card-product__title\">\r\n\t\t\t\t\t\t\t\t\t\t<a [routerLink]=\"['/singleProduct', product.id]\">{{product.name}}</a>\r\n\t\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t\t<p class=\"card-product__price\">{{product.price}}&euro;</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</mat-card>\r\n\t\t\t\t<div *ngIf=\"this.filterqty > 10\">\r\n\t\t\t\t\t<button class=\"btn btn-primary\" *ngIf=\"!this.lastpage\" (click)=\"loadMore()\">Mostrar más</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</mat-card>\r\n\r\n<mat-card class=\"related-product-area\">\r\n\t<div class=\"container\">\r\n\t\t<mat-card class=\"section-margin calc-60px\">\r\n\t\t\t<div class=\"container\">\r\n\t\t\t\t<div class=\"section-intro pb-60px\">\r\n\t\t\t\t\t<p>Figuras populares de la tienda</p>\r\n\t\t\t\t\t<h2>\r\n\t\t\t\t\t\tFiguras <span class=\"section-intro__style\">Recomendadas</span>\r\n\t\t\t\t\t</h2>\r\n\t\t\t\t</div>\r\n\t\t\t\t<mat-tab-group>\r\n\t\t\t\t\t<div *ngFor=\"let product of recommendedProducts\">\r\n\t\t\t\t\t\t<mat-tab label=\"{{product.name}}\"><div class=\"card text-center card-product\">\r\n\t\t\t\t\t\t\t<div class=\"card-product__img\">\r\n\t\t\t\t\t\t\t\t<img *ngIf=\"product.image\" class=\"img-fluid\" src=\"assets{{product.image}}\" alt=\"\" width=\"300\"\r\n\t\t\t\t\t\t\t\t\theight=\"300\">\r\n\t\t\t\t\t\t\t\t<ul class=\"card-product__imgOverlay\">\r\n\t\t\t\t\t\t\t\t\t<li><button mat-icon-button [routerLink]=\"['/singleProduct', product.id]\">\r\n\t\t\t\t\t\t\t\t\t\t\t<mat-icon class=\"material-icons md-18 md-light center-single-product\">search</mat-icon>\r\n\t\t\t\t\t\t\t\t\t\t</button></li>\r\n\t\t\t\t\t\t\t\t\t<li><button mat-icon-button>\r\n\t\t\t\t\t\t\t\t\t\t\t<mat-icon class=\"material-icons md-18 md-light center-single-product\" (click)=\"addProductToOrder(product,1)\">add_shopping_cart\r\n\t\t\t\t\t\t\t\t\t\t\t</mat-icon>\r\n\t\t\t\t\t\t\t\t\t\t</button></li>\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div class=\"card-body\">\r\n\t\t\t\t\t\t\t\t<p>{{product.franchise}}</p>\r\n\t\t\t\t\t\t\t\t<h4 class=\"card-product__title\">\r\n\t\t\t\t\t\t\t\t\t<a [routerLink]=\"['/singleProduct', product.id]\">{{product.name}}</a>\r\n\t\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t\t\t<p class=\"card-product__price\">{{product.price}}€</p>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div></mat-tab>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</mat-tab-group>\r\n\t\t\t</div>\r\n\t\t</mat-card>\r\n\t</div>\r\n</mat-card>\r\n","import { Injectable } from '@angular/core';\r\nimport {Product} from './product.model';\r\nimport { LoginService } from '../auth/login.service';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport {catchError, map } from 'rxjs/operators';\r\n\r\nconst URL = 'api/products/';\r\nconst URL2 = 'api/products';\r\nconst ALL = 'api/products/all';\r\n\r\n@Injectable()\r\nexport class ProductService {\r\n\r\n  constructor(private loginService: LoginService, private http: HttpClient) { }\r\n\r\n\r\n  getProducts(): Observable<Product[]> {\r\n    return this.http.get<any>(URL, {withCredentials: true})\r\n      .pipe(\r\n        map(result => result.content),\r\n        catchError((error) => this.handleError(error)));\r\n  }\r\n\r\n  getAllProducts(): Observable<Product[]>{\r\n    console.log(\"pidiendo todos los datos\");\r\n    return this.http.get<Product[]>(URL,{withCredentials:true})\r\n        .pipe(catchError((error)=>this.handleError(error)));\r\n  }\r\n\r\n  getProductById(id: number| string): Observable<Product> {\r\n    return this.http.get<Product>(URL + id, {withCredentials: true})\r\n    .pipe(catchError((error) => this.handleError(error)));\r\n  }\r\n\r\n  getProductsbyPage(page: number): Observable<Product[]> {\r\n    return this.http.get<Product[]>(URL2 + '?page=' + page, {withCredentials: true})\r\n        .pipe(\r\n            catchError((error) => this.handleError(error)));\r\n  }\r\n\r\n  getProductsbySort(toDo: string, sort: string, page: number): Observable<Product[]> {\r\n    return this.http.get<any>(URL2 + '?page=' + page + '&toDo=' + toDo + '&sort=' + sort, {withCredentials: true})\r\n    .pipe(\r\n      map(result => result.content),\r\n      catchError((error) => this.handleError(error)));\r\n  }\r\n\r\n  getProductsbyKey(toDo: string, key: string, page: number): Observable<Product[]> {\r\n    return this.http.get<any>(URL2 + '?page=' + page + '&toDo=' + toDo + '&key=' + key, {withCredentials: true})\r\n    .pipe(\r\n      map(result => result.content),\r\n      catchError((error) => this.handleError(error)));\r\n  }\r\n\r\n  getProductsbyFilter(franchise: string, distributor: string, height: number, width: number, min_price: number, max_price: number): Observable<Product[]> {\r\n    return this.http.get<any>(URL2 + '?toDo=filter' + '&franchise=' + franchise + '&distributor=' + distributor +\r\n                              '&width=' + width + '&height=' + height + '&min_price=' + min_price + '&max_price=' +\r\n                               max_price, {withCredentials: true})\r\n    .pipe(catchError((error) => this.handleError(error)));\r\n  }\r\n\r\n  saveProduct(product: Product): Observable<Product> {\r\n    const body = JSON.stringify(product);\r\n    const headers = new HttpHeaders({'Content-Type': 'application/json'});\r\n    console.log(product);\r\n    return this.http.post<Product>(URL, body, {headers}).pipe(catchError((error) => this.handleError(error)));\r\n  }\r\n\r\n  deleteProduct(product: Product): Observable<Product[]> {\r\n    return this.http.delete<Product[]>(URL + product.id).pipe(catchError((error) => this.handleError(error)));\r\n  }\r\n\r\n  private handleError(error: any) {\r\n    console.error(error);\r\n    // tslint:disable-next-line: deprecation\r\n    return Observable.throw('Server error (' + error.status + ' ): ' + error);\r\n  }\r\n\r\n  getProductsbyRecommendations(): Observable<Product[]> {\r\n    return this.http.get<any>(URL2 + '?toDo=recommendations', {withCredentials: true})\r\n    .pipe(catchError((error) => this.handleError(error)));\r\n  }\r\n\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { ProductService} from './product.service';\r\nimport { Product} from './product.model';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LoginService } from '../auth/login.service';\r\nimport { OrderService } from '../order/order.service';\r\nimport { Order } from '../order/order.model';\r\nimport { ProductAmount} from './productamount.model';\r\n\r\n@Component({\r\n  selector: 'app-singproduct',\r\n  templateUrl: './singleProduct.component.html',\r\n  styleUrls: ['./product.component.css']\r\n})\r\n\r\nexport class SingleProductComponent {\r\n\r\n  product: Product;\r\n  pAmount: ProductAmount;\r\n  order: Order;\r\n  qty: number;\r\n\r\n  constructor(private router: Router, activatedRoute: ActivatedRoute, public service: ProductService, public loginService: LoginService, private orderService: OrderService) {\r\n    const id = activatedRoute.snapshot.params.id;\r\n    service.getProductById(id).subscribe((product => this.product = product), (error) => console.error(error));\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.qty = 0;\r\n    this.orderService.getCurrentOrder().subscribe(\r\n      order => this.order = order,\r\n      error => console.log(error)\r\n    );\r\n  }\r\n\r\n  deleteProduct() {\r\n    this.service.deleteProduct(this.product).subscribe((_) => this.router.navigate(['/product']), (error) => console.error(error));\r\n  }\r\n\r\n  addProductToOrder(productAux: Product, qt: number){\r\n    let productAmount = { product: productAux, amount: qt }\r\n    this.pAmount = productAmount;\r\n    this.orderService.addProduct(this.pAmount, this.order.id ).subscribe(\r\n      order => { this.order = order;\r\n                  this.router.navigate(['/order']);\r\n      },error => console.log(error));\r\n  }\r\n\r\n}\r\n","<div *ngIf=\"product\">\r\n  <meta charset=\"UTF-8\">\r\n  <!--================Single Product Area =================-->\r\n\t<div class=\"product_image_area\">\r\n\t\t<div class=\"container\">\r\n\t\t\t<div class=\"row s_product_inner\">\r\n\r\n\t\t\t\t<ngb-carousel class=\"col-lg-6 carousel\">\r\n\t\t\t\t\t<ng-template ngbSlide class=\"carousel\">\r\n\t\t\t\t\t  <div class=\"picsum-img-wrapper\">\r\n\t\t\t\t\t\t<img *ngIf=\"product.image\" class=\"card-img\" src=\"/assets/{{product.imagefull}}\">\r\n\t\t\t\t\t  </div>\r\n\t\t\t\t\t  <div class=\"carousel-caption\">\r\n\t\t\t\t\t\t<p>Imagen 1. {{product.name}}</p>\r\n\t\t\t\t\t  </div>\r\n\t\t\t\t\t</ng-template>\r\n\t\t\t\t\t<ng-template ngbSlide class=\"carousel\">\r\n\t\t\t\t\t  <div class=\"picsum-img-wrapper\">\r\n\t\t\t\t\t\t<img *ngIf=\"product.imagefull\" class=\"card-img\" src=\"/assets/{{product.imagefull}}\">\r\n\t\t\t\t\t  </div>\r\n\t\t\t\t\t  <div class=\"carousel-caption\">\r\n\t\t\t\t\t\t<p>Imagen 2. {{product.name}}</p>\r\n\t\t\t\t\t  </div>\r\n\t\t\t\t\t</ng-template>\r\n\t\t\t\t</ngb-carousel>\r\n\r\n\t\t\t\t<div class=\"col-lg-5 offset-lg-1\">\r\n\t\t\t\t\t<div class=\"s_product_text\">\r\n\t\t\t\t\t\t<h3>{{product.name}}</h3>\r\n\t\t\t\t\t\t<h2>{{product.price}}&euro;</h2>\r\n\t\t\t\t\t\t<ul class=\"list no-list\">\r\n\t\t\t\t\t\t\t<li><a class=\"active\"><span>Categor&iacute;a</span> : {{product.franchise}}</a></li>\r\n\t\t\t\t\t\t\t<li><a><span>Disponibilidad</span> : {{product.actual_stock}}/{{product.stock}}</a></li>\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t<p>{{product.description}}</p>\r\n\t\t\t\t\t\t<div class=\"product_count\"><br>\r\n\t\t\t\t\t\t\t<form>\r\n\t\t\t\t\t\t\t\t<mat-label for=\"qty\">Cantidad:</mat-label>\r\n\t\t\t\t\t\t\t\t<div class=\"common-filter\">\r\n\t\t\t\t\t\t\t\t\t<input matInput type=\"text\" name=\"qt\" id=\"sst\" maxlength=\"12\" value=\"1\" title=\"Quantity:\" class=\"add-qty top\" [(ngModel)]=\"qty\">\r\n\t\t\t\t\t\t\t\t</div><br>\r\n\t\t\t\t\t\t\t\t<button mat-button class=\"add-product single-product-font single-product-button\" (click)=\"addProductToOrder(product,qty)\">Añadir +</button>\r\n\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"card_area d-flex align-items-center\">\r\n\t\t\t\t\t\t\t<a class=\"icon_btn\" [routerLink]><mat-icon class=\"icon-style\">grade</mat-icon></a>\r\n\t\t\t\t\t\t\t<a class=\"icon_btn\" [routerLink]><mat-icon class=\"icon-style\">favorite_border</mat-icon></a>\r\n\t\t\t\t\t\t\t<div *ngIf=\"loginService.isAdmin\">\r\n\t\t\t\t\t\t\t\t<button mat-button class=\"remove-single-product single-product-button\" (click) =\"deleteProduct()\">Eliminar</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<!--<div class=\"product_count\">\r\n\t\t\t\t\t\t<form method=\"post\" action=\"/addFromProduct/{{id}}\"><br>\r\n              \t\t\t\t<label for=\"qty\">Cantidad:</label>\r\n              \t\t\t\t<div class=\"product_count\">\r\n                            \t<input type=\"text\" name=\"qt\" id=\"sst\" maxlength=\"12\" value=\"1\" title=\"Quantity:\" class=\"input-text qty\">\r\n                                <button onclick=\"var result = document.getElementById('sst'); var sst = result.value; if( !isNaN( sst )) result.value++;return false;\" class=\"increase items-count\" type=\"button\">\r\n                                \t<i class=\"lnr lnr-chevron-up\"></i>\r\n                                </button>\r\n                                <button onclick=\"var result = document.getElementById('sst'); var sst = result.value; if( !isNaN( sst ) & sst > 0 ) result.value--;return false;\" class=\"reduced items-count\" type=\"button\">\r\n                                \t<i class=\"lnr lnr-chevron-down\"></i>\r\n                                </button>\r\n                            </div>\r\n\t\t\t\t\t\t\t<button class=\"add-product single-product-font\">Añadir +</button>\r\n\t\t\t\t\t\t\t<input type=\"hidden\" name=\"_csrf\" value=\"{{token}}\" />\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t</div>-->\r\n\t\t\t\t\t\t<!--<div class=\"card_area d-flex align-items-center\">\r\n\t\t\t\t\t\t\t<a class=\"icon_btn\" href=\"#\"><i class=\"lnr lnr lnr-diamond\"></i></a>\r\n\t\t\t\t\t\t\t<a class=\"icon_btn\" href=\"#\"><i class=\"lnr lnr lnr-heart\"></i></a>\r\n\t\t\t\t\t\t\t<div *ngIf=\"loginService.isAdmin\">\r\n\t\t\t\t\t\t\t\t<button class=\"remove-single-product\" (click) =\"deleteProduct()\">Eliminar</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>-->\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n\t<!--================End Single Product Area =================-->\r\n\r\n\t<!--================Product Description Area =================-->\r\n\r\n\r\n\t<section class=\"product_description_area\">\r\n\t\t<div class=\"container\">\r\n\t\t\t<mat-tab-group mat-stretch-tabs>\r\n\t\t\t\t<mat-tab label=\"Descripcion\"> {{product.description}} </mat-tab>\r\n\t\t\t\t<mat-tab label=\"Especificaciones\">\r\n\t\t\t\t\t<table class=\"table\">\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t<h5>Ancho</h5>\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t<h5>{{product.width}} cm</h5>\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t<h5>Alto</h5>\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t<h5>{{product.height}} cm</h5>\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t<h5>Categor&iacute;a</h5>\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t<h5>{{product.franchise}}</h5>\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t<h5>Peso</h5>\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t<h5>{{product.weight}} gr</h5>\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t<h5>Fabricante</h5>\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t<h5>{{product.distributor}}</h5>\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t<h5>Referencia</h5>\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t<h5>{{ product.reference }}</h5>\r\n\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</table>\r\n\t\t\t\t</mat-tab>\r\n\t\t\t  </mat-tab-group>\r\n\t\t\t<ul class=\"nav nav-tabs\" id=\"myTab\">\r\n\t\t\t\t<!--<li class=\"nav-item\">\r\n\t\t\t\t\t<a class=\"nav-link\" id=\"home-tab\" data-toggle=\"tab\" href=\"#home\" role=\"tab\" aria-controls=\"home\" aria-selected=\"true\">Descripci&oacute;n</a>\r\n\t\t\t\t</li> -->\r\n\t\t\t\t<!--<li class=\"nav-item\">\r\n\t\t\t\t\t<a class=\"nav-link\" id=\"profile-tab\" data-toggle=\"tab\" href=\"#profile\" role=\"tab\" aria-controls=\"profile\"\r\n\t\t\t\t\t aria-selected=\"false\">Especificaciones</a>\r\n\t\t\t\t</li> -->\r\n\t\t\t\t<!-- <li class=\"nav-item\">\r\n\t\t\t\t\t<a class=\"nav-link\" id=\"contact-tab\" data-toggle=\"tab\" href=\"#contact\" role=\"tab\" aria-controls=\"contact\"\r\n\t\t\t\t\t aria-selected=\"false\">Comentarios</a>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li class=\"nav-item\">\r\n\t\t\t\t\t<a class=\"nav-link active\" id=\"review-tab\" data-toggle=\"tab\" href=\"#review\" role=\"tab\" aria-controls=\"review\"\r\n\t\t\t\t\t aria-selected=\"false\">Reseï¿½as</a>\r\n\t\t\t\t</li> -->\r\n\t\t\t</ul>\r\n\r\n\t\t</div>\r\n  </section>\r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  baseUrl: '/api'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule).then(ref => {\r\n  // Ensure Angular destroys itself on hot reloads.\r\n  /*if (window['ngRef']) {\r\n    window['ngRef'].destroy();\r\n  }\r\n  window['ngRef'] = ref;*/\r\n\r\n  // Otherise, log the boot error\r\n}).catch(err => console.error(err));\r\n"]}